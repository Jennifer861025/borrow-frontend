[{"/Users/jennifer/Desktop/frontend/src/index.js":"1","/Users/jennifer/Desktop/frontend/src/App.js":"2","/Users/jennifer/Desktop/frontend/src/reportWebVitals.js":"3","/Users/jennifer/Desktop/frontend/src/components/Main.js":"4","/Users/jennifer/Desktop/frontend/src/components/Header.js":"5","/Users/jennifer/Desktop/frontend/src/reducers/appReducer.js":"6","/Users/jennifer/Desktop/frontend/src/constants/index.js":"7","/Users/jennifer/Desktop/frontend/src/contexts/index.js":"8","/Users/jennifer/Desktop/frontend/src/screens/AddScreen.js":"9","/Users/jennifer/Desktop/frontend/src/screens/HomeScreen.js":"10","/Users/jennifer/Desktop/frontend/src/screens/AssistantBorrowScreen.js":"11","/Users/jennifer/Desktop/frontend/src/screens/AssistantOverviewScreen.js":"12","/Users/jennifer/Desktop/frontend/src/screens/AssistantReservedScreen.js":"13","/Users/jennifer/Desktop/frontend/src/screens/AssistantLendedScreen.js":"14","/Users/jennifer/Desktop/frontend/src/screens/BorrowRecordScreen.js":"15","/Users/jennifer/Desktop/frontend/src/screens/AssistantTodayScreen.js":"16","/Users/jennifer/Desktop/frontend/src/screens/CertificateScreen.js":"17","/Users/jennifer/Desktop/frontend/src/screens/ManageScreen.js":"18","/Users/jennifer/Desktop/frontend/src/screens/PersonalScreen.js":"19","/Users/jennifer/Desktop/frontend/src/screens/LoginScreen.js":"20","/Users/jennifer/Desktop/frontend/src/screens/BorrowScreen.js":"21","/Users/jennifer/Desktop/frontend/src/screens/EditScreen.js":"22"},{"size":500,"mtime":1609087025000,"results":"23","hashOfConfig":"24"},{"size":1334,"mtime":1609160176000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609087025000,"results":"26","hashOfConfig":"24"},{"size":2093,"mtime":1609699617665,"results":"27","hashOfConfig":"24"},{"size":2332,"mtime":1609568512000,"results":"28","hashOfConfig":"24"},{"size":3896,"mtime":1609658835010,"results":"29","hashOfConfig":"24"},{"size":978,"mtime":1609737535977,"results":"30","hashOfConfig":"24"},{"size":213,"mtime":1609088291000,"results":"31","hashOfConfig":"24"},{"size":8276,"mtime":1609701076520,"results":"32","hashOfConfig":"24"},{"size":5131,"mtime":1609700203230,"results":"33","hashOfConfig":"24"},{"size":8081,"mtime":1609741739123,"results":"34","hashOfConfig":"24"},{"size":20765,"mtime":1609746289437,"results":"35","hashOfConfig":"24"},{"size":10560,"mtime":1609660938633,"results":"36","hashOfConfig":"24"},{"size":8801,"mtime":1609673223552,"results":"37","hashOfConfig":"24"},{"size":3863,"mtime":1609699884736,"results":"38","hashOfConfig":"24"},{"size":10799,"mtime":1609673198863,"results":"39","hashOfConfig":"24"},{"size":2979,"mtime":1609579981526,"results":"40","hashOfConfig":"24"},{"size":12511,"mtime":1609702299530,"results":"41","hashOfConfig":"24"},{"size":6237,"mtime":1609658949810,"results":"42","hashOfConfig":"24"},{"size":4181,"mtime":1609576621967,"results":"43","hashOfConfig":"24"},{"size":15769,"mtime":1609676291644,"results":"44","hashOfConfig":"24"},{"size":15751,"mtime":1609731690161,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1u5uics",{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"48"},"/Users/jennifer/Desktop/frontend/src/index.js",[],["106","107"],"/Users/jennifer/Desktop/frontend/src/App.js",["108","109","110","111","112","113","114"],"import React, { useReducer, useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport Cookie from \"js-cookies\"\nimport './App.css';\nimport actionType from \"./constants\";\nimport Header from './components/Header'\nimport Main from './components/Main'\n\nimport { StateContext, DispatchContext, HeaderContext } from \"./contexts\"\nimport { initialAppState, appReducer } from \"./reducers/appReducer\"\nimport axios from \"axios\";\nimport './basicSetting.css'\nimport './button.css'\nimport './sidebar.css'\n\nfunction App() {\n    const [state, dispatch] = useReducer(appReducer, initialAppState);\n    const [headerContext , setHeaderContext] = useState(\"借用物品\");\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n            <StateContext.Provider value={state}>\n                <HeaderContext.Provider value={[headerContext , setHeaderContext]}>\n                  <BrowserRouter>\n                    <div class=\"grid-container\">\n                        <Header />\n                        <Main />\n                        <footer class=\"footer\">All right reserved.</footer>\n                    </div>\n                </BrowserRouter>  \n                </HeaderContext.Provider>\n            </StateContext.Provider>\n        </DispatchContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/jennifer/Desktop/frontend/src/reportWebVitals.js",[],"/Users/jennifer/Desktop/frontend/src/components/Main.js",[],"/Users/jennifer/Desktop/frontend/src/components/Header.js",["115","116","117","118"],"import React, { useEffect, useContext, useReducer, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\";\nimport actionType from \"../constants\";\n\nconst Header = () => {\n    const { userSignin } = useContext(StateContext);\n    const { userInfo } = userSignin;\n    const [headerContext , setHeaderContext] = useContext(HeaderContext);\n    const dispatch = useContext(DispatchContext);\n\n    const personLogin=()=> {\n        if (userInfo.identity ===\"student\") {\n            document.querySelector(\"#student\").classList.remove(\"display-none\");\n            document.querySelector(\"#login\").classList.add(\"display-none\");\n            document.querySelector(\"#teacher\").classList.add(\"display-none\");\n        }\n        else if(userInfo.identity ===\"teacher\"){\n            document.querySelector(\"#student\").classList.add(\"display-none\");\n            document.querySelector(\"#login\").classList.add(\"display-none\");\n            document.querySelector(\"#teacher\").classList.remove(\"display-none\");\n        }\n        else{\n            document.querySelector(\"#teacher\").classList.add(\"display-none\");\n            document.querySelector(\"#student\").classList.add(\"display-none\");\n            document.querySelector(\"#login\").classList.remove(\"display-none\");\n        }\n    }\n\n    useEffect(() => {\n        personLogin();\n    }, [userInfo.identity]);\n\n    return (\n        <header className=\"header\">\n            <Link to={userInfo.identity === \"teacher\" ? \"/AssistantOverview\" : \"/\"}>\n                <div className=\"header-title\">\n                    <div className=\"dtd\">數位科技設計學系｜</div>\n                    <div className=\"page_name\">{headerContext}</div>\n                </div>\n            </Link>\n            <div className=\"header-login display-none\" id=\"student\">\n                <Link to=\"/Personal\">{userInfo.name}</Link>\n            </div>\n\n            <div className=\"header-login display-none\" id=\"teacher\">\n                <Link to=\"/Login\" onClick={()=>dispatch({type:actionType.USER_LOGOUT})}>{userInfo.name+\"登出\"}</Link>\n            </div>\n\n            <div className=\"header-login\" id=\"login\">\n                <Link to={\"/Login\"}>會員登入</Link>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","/Users/jennifer/Desktop/frontend/src/reducers/appReducer.js",[],"/Users/jennifer/Desktop/frontend/src/constants/index.js",[],"/Users/jennifer/Desktop/frontend/src/contexts/index.js",[],"/Users/jennifer/Desktop/frontend/src/screens/AddScreen.js",["119","120","121","122","123","124","125","126","127","128"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport '../css/add.css';\nimport axios from \"axios\";\n// import Calendar from \"../components/CalendarDay\"\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\n\n//-------------------------\nconst today = new Date();\nconst monthsArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst daysArr = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nvar nodate;\nvar nextMonth = currentMonth + 1;\nvar cantBorrowDate = [];\n\nif (currentMonth == 11) {\n    nextMonth = 0;\n}\n\nfor(var i = 1; i<=new Date(currentYear, currentMonth+1, 0).getDate();i++){\n    if(new Date(currentYear, currentMonth, i).getDay() == 6|| new Date(currentYear, currentMonth, i).getDay() == 0){\n      const thisDate = currentYear.toString() + \"-\" + (currentMonth + 1).toString() + \"-\" + i.toString();\n      cantBorrowDate.push(thisDate);\n    }\n}\nfor(var i = 1; i<=new Date(currentYear, nextMonth+1, 0).getDate();i++){\n    if(new Date(currentYear, nextMonth, i).getDay() == 6|| new Date(currentYear, nextMonth, i).getDay() == 0){\n      const thisDate = currentYear.toString() + \"-\" + (nextMonth + 1).toString() + \"-\" + i.toString();\n      cantBorrowDate.push(thisDate);\n    }\n}\nconsole.log(cantBorrowDate);\n\nconst clickedDate = (e) => {\n    if(e.className == \"date-picker\"){\n        e.className = \"date-picker selected\"\n        cantBorrowDate.push(e.getAttribute('data-year') + \"-\" + e.getAttribute('data-month') + \"-\" + e.getAttribute('data-date'));\n    }else{\n        e.className = \"date-picker\"\n        const index = cantBorrowDate.indexOf(e.getAttribute('data-year') + \"-\" + e.getAttribute('data-month') + \"-\" + e.getAttribute('data-date'));\n        if (index !== -1) {\n            cantBorrowDate.splice(index, 1);\n        }\n    }\n    console.log(cantBorrowDate);\n};\n\nfunction daysInMonth(month, year) {\n    return 32 - new Date(year, month, 32).getDate();\n}\n\nfunction showDays(month, year, i){\n    var date = i*7-nodate+1\n    var days = []\n    var firstDay = new Date(year, month).getDay();\n    var daysMonth = daysInMonth(month, year);\n    for(var j = 0; j < 7; j++){\n        if(i === 0 && j < firstDay) {\n            days.push(\n                <td></td>\n            )\n            nodate++;\n        }else if(date > daysMonth){\n            break;\n        }else{\n            const index = cantBorrowDate.indexOf(year.toString() + \"-\" + (month + 1).toString() + \"-\" + date.toString());\n            if (month === currentMonth && date < today.getDate()){\n                days.push(\n                <td data-date={date} data-month={month + 1} data-year={year} className=\"date-picker gray-text\">\n                    <span>{date}</span>\n                </td>\n                )\n            }else{\n                var class_name = \"date-picker\"\n                if (index !== -1) {\n                    class_name = \"date-picker selected\"\n                }\n                days.push(\n                    <td data-date={date} data-month={month + 1} data-year={year} className={class_name} onClick={(e) => clickedDate(e.currentTarget)}>\n                        {/* className={`${state.open ? \"date-picker selected\" : \"date-picker\"}`}> */}\n                        <span>{date}</span>\n                    </td>\n                )\n            }\n            date++\n        }\n    }\n    return(days);\n}\n\nfunction showCalendar(month, year){\n    var weeks = []\n    nodate = 0\n\n    for (var i = 0; i < 6; i++) {\n        weeks.push(\n            <tr>\n                {showDays(month, year, i)}\n            </tr>\n        )\n    }\n    return(weeks);\n}\n//-------------------------\n\nconst AddScreen = () => {\n    const { itemsInfo } = useContext(StateContext);\n    const { loading, error } = itemsInfo;\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const dispatch = useContext(DispatchContext);\n\n    const [name, setName] = useState(\"\");\n    const history = useHistory();\n    var rules\n\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"新增物品\")\n        }\n        changeHeaderTitle()\n    });\n\n    const submitHandler = async () => {\n        console.log(name)\n        // e.preventDefault();\n        dispatch({\n            type: actionType.ITEM_DETAILS_UPDATE_REQUEST\n        });\n        rules = document.getElementById(\"ruleTextarea\").value.replace(/\\r\\n/g,\"\\n\").split(\"\\n\");\n        try {\n            const { data } = await axios.post(SERVER_URL + \"/api/items/add\", {\n                name,\n                type: \"equipment\",\n                cantBorrowDate,\n                rules\n            });\n            dispatch({ type: actionType.ITEM_DETAILS_UPDATE_SUCCESS, payload: data });\n            //   Cookie.set(\"userInfo\", JSON.stringify(data));\n            history.push(\"/AssistantBorrow/\")\n        } catch (error) {\n            dispatch({\n                type: actionType.ITEM_DETAILS_UPDATE_FAIL,\n                payload: error.message,\n            });\n        }\n    }\n\n    return (\n        <div className=\"add-content\">\n            <div className=\"photoArea\">\n                <div className=\"icon-btn-S plusBtn\">\n                    <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"title\">新增圖片</div>\n            </div>\n            <div className=\"detailArea\">\n                <div className=\"descriptionArea\">\n                    <input className=\"item-name-input\" type=\"text\" onChange={(e) => setName(e.target.value)}></input>\n                    <div className=\"line\"></div>\n                    <div className=\"rule\">\n                        <label for=\"\">租借規範</label>\n                        <textarea id=\"ruleTextarea\"></textarea>\n                    </div>\n                </div>\n                <div className=\"calendarArea\">\n                    <div class=\"container-calendar\">\n                        <div class=\"button-container-calendar\">\n                            <p id=\"monthHeader\">{monthsArr[currentMonth]}</p>\n                        </div>\n\n                        <table class=\"table-calendar\" id=\"calendar\">\n                            <thead id=\"thead-month\">\n                                <tr>\n                                    {daysArr.map((dhead) => (\n                                        <th data-days={dhead}>{dhead}</th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody id=\"calendar-body\">\n                                {showCalendar(currentMonth, currentYear)}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"calendarArea\">\n                    <div class=\"container-calendar\">\n                        <div class=\"button-container-calendar\">\n                            <p id=\"monthHeader\">{monthsArr[nextMonth]}</p>\n                        </div>\n\n                        <table class=\"table-calendar\" id=\"calendar\">\n                            <thead id=\"thead-month\">\n                                <tr>\n                                    {daysArr.map((dhead) => (\n                                        <th data-days={dhead}>{dhead}</th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody id=\"calendar-body\">\n                                {showCalendar(currentMonth + 1, currentYear)}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"btnArea\">\n                <Link to=\"/AssistantBorrow\">\n                        <button className=\"secondary-btn-M\">取消</button>\n                    </Link>\n                    <button className=\"primary-btn-M-O\" onClick={submitHandler}>確定</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AddScreen;","/Users/jennifer/Desktop/frontend/src/screens/HomeScreen.js",["129","130","131","132","133","134","135"],"import React, { useEffect, useContext, useState } from 'react';\n// import items from '../json/items.json'\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\";\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../index.css'\n\nconst today = new Date();\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nconst currentDay = today.getDate();\n\nconst HomeScreen = () => {\n  const { userSignin, itemsInfo } = useContext(StateContext);\n  const { isLogin } = userSignin;\n  const { items, loading, error } = itemsInfo;\n  const dispatch = useContext(DispatchContext);\n  const [headerContext, setHeaderContext] = useContext(HeaderContext);\n  const [itemType, setItemType] = useState(items);\n\n  var items_key;\n  var items_equipment;\n\n  if (items.length != 0 && items) {\n    items_key = (items || []).filter((x) => x.type === \"key\");\n    items_equipment = (items || []).filter((x) => x.type === \"equipment\");\n  }\n\n  useEffect(() => {\n    const changeHeaderTitle = () => {\n      setHeaderContext(\"借用物品\")\n    }\n    changeHeaderTitle()\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        dispatch({ type: actionType.ITEM_LIST_REQUEST });\n        const { data } = await axios.get(SERVER_URL + \"/api/items\");\n        dispatch({ type: actionType.ITEM_LIST_SUCCESS, payload: data });\n      } catch (error) {\n        dispatch({\n          type: actionType.ITEM_LIST_FAIL,\n          payload: error.message,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // console.log(items);\n    items_key = (items || []).filter((x) => x.type === \"key\");\n    items_equipment = (items || []).filter((x) => x.type === \"equipment\");\n    if (items.length != 0 && items) {\n      setItemType(items);\n    }\n  }, [items]);\n\n  const isLended = (alreadyBorrowDay) => {\n    var dayCorrect = false;\n    if (alreadyBorrowDay != []) {\n      alreadyBorrowDay.forEach(element => {\n        var dateArr = element.split(\"-\");\n        if (dateArr[0] === currentYear.toString() && dateArr[1] === (currentMonth + 1).toString() && dateArr[2]=== currentDay.toString()) {\n          dayCorrect = true\n        } \n      });\n      if(dayCorrect === true){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n    else {\n      return false;\n    }\n  }\n\n  const itemAllOnclick = () => {\n    document.querySelector(\"#all\").classList.add(\"select\");\n    document.querySelector(\"#key\").classList.remove(\"select\");\n    document.querySelector(\"#equipment\").classList.remove(\"select\");\n    setItemType(items);\n  }\n  const itemKeyOnclick = () => {\n    document.querySelector(\"#key\").classList.add(\"select\");\n    document.querySelector(\"#all\").classList.remove(\"select\");\n    document.querySelector(\"#equipment\").classList.remove(\"select\");\n    setItemType(items_key);\n  }\n  const itemEquipmentOnclick = () => {\n    document.querySelector(\"#equipment\").classList.add(\"select\");\n    document.querySelector(\"#key\").classList.remove(\"select\");\n    document.querySelector(\"#all\").classList.remove(\"select\");\n    setItemType(items_equipment);\n  }\n\n  return (\n    <div className=\"content\">\n      <aside className=\"sidebar\">\n        <ul>\n          <li>\n            <button className=\"sideBar-btn select\" id=\"all\" onClick={itemAllOnclick}>\n              <i className=\"fa fa-th-large\" aria-hidden=\"true\"></i>\n                  所有物品\n                </button>\n          </li>\n          <li>\n            <button className=\"sideBar-btn\" id=\"key\" onClick={itemKeyOnclick}>\n              <i className=\"fa fa-key\" aria-hidden=\"true\"></i>\n                  教室鑰匙\n                </button>\n          </li>\n          <li>\n            <button className=\"sideBar-btn\" id=\"equipment\" onClick={itemEquipmentOnclick}>\n              <i className=\"fa fa-plug\" aria-hidden=\"true\"></i>\n                  器材\n                </button>\n          </li>\n        </ul>\n      </aside>\n\n      {loading ? (\n        // <LoadingBox></LoadingBox>\n        <div>loading</div>\n      ) : error ? (\n        // <MessageBox variant=\"danger\">{error}</MessageBox>\n        <div>{error}</div>\n      ) : (\n            <div className=\"items\">\n              {itemType.map((item) => (\n                <div key={item._id} className=\"item\">\n                  <div className={`${isLended(item.alreadyBorrowDate) ? \"label\" : \"label display-none\"}`}>\n                    <div className=\"label-p\">本日已借用</div>\n                  </div>\n                  <div className=\"item-box\">\n                    <div className=\"item-photo\">\n                      <img src={\"../\" + item.image} alt=\"\" className=\"item-photo-img\"></img>\n                    </div>\n                    <div className=\"item-name\">{item.name}</div>\n                    <Link to={isLogin === false ? \"/Login\" : \"/Borrow/\" + item._id}><button className=\"primary-btn-L item-borrowBtn\">借用物品</button></Link>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n    </div>\n  );\n}\n\nexport default HomeScreen;","/Users/jennifer/Desktop/frontend/src/screens/AssistantBorrowScreen.js",["136","137","138","139","140","141"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\n// import items from '../json/items.json'\nimport axios from \"axios\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/assistant_borrow.css'\n\nconst AssistantBorrowScreen = () => {\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const { itemsInfo } = useContext(StateContext);\n    const { items, loading, error } = itemsInfo;\n    const dispatch = useContext(DispatchContext);\n    const [itemType, setItemType] = useState(items);\n    const [itemLended, setItemLended] = useState(null);\n    const [itemArray, setItemArray] = useState(items);\n\n    var items_key;\n    var items_equipment;\n\n    if (items.length != 0 && items) {\n        items_key = (items || []).filter((x) => x.type === \"key\");\n        items_equipment = (items || []).filter((x) => x.type === \"equipment\");\n    }\n\n    // changeHeaderTitle\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"管理物品\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.ITEM_LIST_REQUEST });\n                const { data } = await axios.get(SERVER_URL + \"/api/items\");\n                dispatch({ type: actionType.ITEM_LIST_SUCCESS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.ITEM_LIST_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        // console.log(items);\n        items_key = (items || []).filter((x) => x.type === \"key\");\n        items_equipment = (items || []).filter((x) => x.type === \"equipment\");\n        if (items.length != 0 && items) {\n            setItemType(items);\n        }\n    }, [items]);\n\n    useEffect(() => {\n        if (itemLended === null) {\n            setItemArray(itemType)\n        }\n        else {\n            setItemArray(itemType.filter((x) => x.lended === itemLended));\n        }\n    }, [itemType, itemLended]);\n\n    // select itemType\n    //  const items_key = items.filter((x) => x.type === \"key\");\n    //  const items_equipment = items.filter((x) => x.type === \"equipment\");\n    // const items_lended = itemType.filter((x) => x.lended === true);\n    // const items_notLended = itemType.filter((x) => x.lended === false);\n\n    // asideBtn OnClick\n    const itemAllOnclick = () => {\n        document.querySelector(\"#all\").classList.add(\"select\");\n        document.querySelector(\"#key\").classList.remove(\"select\");\n        document.querySelector(\"#equipment\").classList.remove(\"select\");\n        setItemType(items);\n    }\n    const itemKeyOnclick = () => {\n        document.querySelector(\"#key\").classList.add(\"select\");\n        document.querySelector(\"#all\").classList.remove(\"select\");\n        document.querySelector(\"#equipment\").classList.remove(\"select\");\n        setItemType(items_key);\n    }\n    const itemEquipmentOnclick = () => {\n        document.querySelector(\"#equipment\").classList.add(\"select\");\n        document.querySelector(\"#key\").classList.remove(\"select\");\n        document.querySelector(\"#all\").classList.remove(\"select\");\n        setItemType(items_equipment);\n    }\n\n    const allItemOnclick = () => {\n        document.querySelector(\"#allItem\").classList.add(\"select\");\n        document.querySelector(\"#lended\").classList.remove(\"select\");\n        document.querySelector(\"#notLended\").classList.remove(\"select\");\n        setItemLended(null);\n    }\n    const lendedOnclick = () => {\n        document.querySelector(\"#lended\").classList.add(\"select\");\n        document.querySelector(\"#allItem\").classList.remove(\"select\");\n        document.querySelector(\"#notLended\").classList.remove(\"select\");\n        setItemLended(true);\n    }\n\n    const notLendedOnclick = () => {\n        document.querySelector(\"#notLended\").classList.add(\"select\");\n        document.querySelector(\"#allItem\").classList.remove(\"select\");\n        document.querySelector(\"#lended\").classList.remove(\"select\");\n        setItemLended(false);\n    }\n\n\n    return (\n        <div>\n            <Link to={\"/Add\"}>\n                <div className=\"icon-btn-L assistant_borrow_plusBtn\">\n                    <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </div>\n            </Link>\n            <div className=\"assistant_borrow-content\">\n                <aside className=\"sidebar\">\n                    <ul>\n                        <li>\n                            <button className=\"sideBar-btn select\" id=\"all\" onClick={itemAllOnclick}>\n                                <i className=\"fa fa-th-large\" aria-hidden=\"true\"></i>\n                                所有物品\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"sideBar-btn\" id=\"key\" onClick={itemKeyOnclick}>\n                                <i className=\"fa fa-key\" aria-hidden=\"true\"></i>\n                                教室鑰匙\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"sideBar-btn\" id=\"equipment\" onClick={itemEquipmentOnclick}>\n                                <i className=\"fa fa-plug\" aria-hidden=\"true\"></i>\n                                器材\n                            </button>\n                        </li>\n                    </ul>\n                    <div>\n                        <hr />\n                        <Link to={\"/AssistantOverview\"}>\n                            <button className=\"sideBar-btn\">\n                                <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"></i>\n                                今日預約\n                            </button>\n                        </Link>\n                    </div>\n                </aside>\n                <div className=\"assistant_borrowContent\">\n                    <div className=\"borrow-filter\">\n                        <button className=\"filter-btn select\" id=\"allItem\" onClick={allItemOnclick}>\n                            全部\n                        </button>\n                        <button className=\"filter-btn\" id=\"lended\" onClick={lendedOnclick}>\n                            已借出\n                        </button>\n                        <button className=\"filter-btn\" id=\"notLended\" onClick={notLendedOnclick}>\n                            未借出\n                        </button>\n                    </div>\n\n                    {loading ? (\n                        // <LoadingBox></LoadingBox>\n                        <div>loading</div>\n                    ) : error ? (\n                        // <MessageBox variant=\"danger\">{error}</MessageBox>\n                        <div>{error}</div>\n                    ) : (\n                                <div className=\"items\">\n                                    {itemArray.map((item) => (\n                                        <div className=\"item\">\n                                            <div className=\"item-box\">\n                                                <div className=\"item-photo\">\n                                                    <img src={\"../\" + item.image} alt=\"\" className=\"item-photo-img\"></img>\n                                                </div>\n                                                <div className=\"item-name\">{item.name}</div>\n                                                <Link to={\"/Manage/\" + item._id}><button className=\"primary-btn-L-B\">管理</button></Link>\n                                            </div>\n                                        </div>\n                                    ))}\n\n                                </div>\n                            )}\n                </div>\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default AssistantBorrowScreen;","/Users/jennifer/Desktop/frontend/src/screens/AssistantOverviewScreen.js",["142","143","144","145","146","147","148","149","150"],"/Users/jennifer/Desktop/frontend/src/screens/AssistantReservedScreen.js",["151","152","153","154","155","156","157"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/assistant_today.css'\n\nconst today = new Date();\nconst currentDay = today.getDate();\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nconst todayDate = currentYear.toString() + \"-\" + + (currentMonth + 1).toString() + \"-\" + currentDay.toString();\n\nconst AssistantReservedScreen = () => {\n    const { borrowInfo } = useContext(StateContext);\n    const { borrowItems, borrowLoading, borrowError } = borrowInfo;\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const dispatch = useContext(DispatchContext);\n\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"物品總覽-已預約\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n                const { data } = await axios.get(SERVER_URL + \"/api/reserved/new\");\n                dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.RESERVED_ITEMS_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    const changeState = async (reservedState, borrowId) => {\n        // dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.put(SERVER_URL + \"/api/reserved/\" + borrowId + \"/changeState\", {\n                reservedState\n            });\n            dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n            const { data } = await axios.post(SERVER_URL + \"/api/reserved/today\", {\n                reservedDate: todayDate\n            });\n            dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const removeBorrow = async (borrowId, name, alreadyBorrowDate, stuNumber) => {\n        dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.post(SERVER_URL + \"/api/reserved/remove\", {\n                _id: borrowId\n            });\n            const { data } = await axios.put(SERVER_URL + \"/api/items/findItem\", {\n                name\n            });\n            await axios.put(SERVER_URL + \"/api/items/\" + data._id + \"/removeAlreadyBorrowDate\", {\n                alreadyBorrowDate\n            });\n            removeUserReserved(stuNumber, name, alreadyBorrowDate);\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const removeUserReserved = async (number, reservedName, reservedDate) => {\n        try {\n            await axios.put(SERVER_URL + \"/api/users/deleteReserved\", {\n                number,\n                reservedName,\n                reservedDate\n            });\n            // dispatch({ type: actionType.USER_UPDATE_RESERVED, payload: data });\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    return (\n        <div className=\"assistant_today-content\">\n            <aside className=\"sidebar\">\n                <ul>\n                    <li>\n                        <Link to={\"/AssistantOverview\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\n                                總覽\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantToday\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"></i>\n                                今日預約\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantReserved\"}>\n                            <button className=\"sideBar-btn select\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                                已預約\n                                </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantLended\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                已借出\n                            </button>\n                        </Link>\n                    </li>\n                </ul>\n                <div>\n                    <hr />\n                    <Link to={\"/AssistantBorrow\"}>\n                        <button className=\"sideBar-btn\">\n                            <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                            管理物品\n                            </button>\n                    </Link>\n                </div>\n            </aside>\n            {borrowLoading ? (\n                // <LoadingBox></LoadingBox>\n                <div>loading</div>\n            ) : borrowError ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{borrowError}</div>\n            ) : (\n                        <div className=\"today_content\">\n                            {borrowItems.length === 0 ? (\n                                <div className=\"personal-borrowRecord-none\"><i class=\"fa fa-history\" aria-hidden=\"true\"></i><p>尚未有借用預約</p></div>\n                            ) : (\n                                    borrowItems.map((item, index) => (\n                                        <div className=\"one_day_reserved\">\n                                            { (index == 0 || (index > 0 && item.reservedDate != borrowItems[index - 1].reservedDate)) ?\n                                                <div className=\"today_date\">\n                                                    <p>{item.reservedDate}</p>\n                                                </div> : null\n                                            }\n                                            <div className=\"content_box\">\n                                                <div>\n                                                    <p className=\"obj_name\">{item.name}</p>\n                                                    <div className=\"reserved_content\">\n                                                        <div className=\"reserved-photo\">\n                                                            <img src={\"../\" + item.image} alt=\"\" className=\"reserved-photo-img\"></img>\n                                                        </div>\n                                                        <div>\n                                                            <div className=\"reserved_info\">\n                                                                <table>\n                                                                    <tr>\n                                                                        <th>借物學生</th>\n                                                                        <td>{item.stuNumber} &nbsp; <span>{item.stuName}</span></td>\n                                                                        <th>借物理由</th>\n                                                                        <td>{item.reservedReason}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <th>聯絡電話</th>\n                                                                        <td>{item.stuPhone}</td>\n                                                                        <th>拿取時間</th>\n                                                                        <td>{item.getTime}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <th>E-mail</th>\n                                                                        <td colspan=\"3\">{item.stuEmail}</td>\n                                                                    </tr>\n                                                                </table>\n                                                            </div>\n                                                        </div>\n                                                        {item.reservedDate == todayDate ?\n                                                            <div className=\"btnArea-col\">\n                                                                <button className=\"primary-btn-M-O\" onClick={() => changeState(item.reservedState, item._id)}>借出</button>\n                                                                <button className=\"secondary-btn-M\" onClick={() => removeBorrow(item._id, item.name, item.reservedDate, item.stuNumber)}>取消預約</button>\n                                                            </div> : null\n                                                        }\n                                                        {item.reservedDate != todayDate ?\n                                                            <button className=\"secondary-btn-M\" onClick={() => removeBorrow(item._id, item.name, item.reservedDate, item.stuNumber)}>取消預約</button>\n                                                            : null\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                )\n                            }\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default AssistantReservedScreen;","/Users/jennifer/Desktop/frontend/src/screens/AssistantLendedScreen.js",["158","159","160","161","162"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/assistant_today.css'\n\nconst AssistantLendedScreen = () => {\n    const { borrowInfo } = useContext(StateContext);\n    const { borrowItems, borrowLoading, borrowError } = borrowInfo;\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const dispatch = useContext(DispatchContext);\n\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"物品總覽-已借出\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n                const { data } = await axios.get(SERVER_URL + \"/api/reserved/lended\");\n                dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.RESERVED_ITEMS_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    const returnBorrow = async (reservedState, borrowId, name, alreadyBorrowDate, stuNumber) => {\n        dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.put(SERVER_URL + \"/api/reserved/\" + borrowId + \"/changeState\", {\n                reservedState\n            });\n            const { data } = await axios.put(SERVER_URL + \"/api/items/findItem\", {\n                name\n            });\n            await axios.put(SERVER_URL + \"/api/items/\" + data._id + \"/removeAlreadyBorrowDate\", {\n                alreadyBorrowDate\n            });\n            removeUserReserved(stuNumber, name, alreadyBorrowDate);\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const removeUserReserved = async (number, reservedName, reservedDate) => {\n        try {\n            await axios.put(SERVER_URL + \"/api/users/deleteReserved\", {\n                number,\n                reservedName,\n                reservedDate\n            });\n            // dispatch({ type: actionType.USER_UPDATE_RESERVED, payload: data });\n            // console.log(data);\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    return (\n        <div className=\"assistant_today-content\">\n            <aside className=\"sidebar\">\n                <ul>\n                    <li>\n                        <Link to={\"/AssistantOverview\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\n                                總覽\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantToday\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"></i>\n                                今日預約\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantReserved\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                                已預約\n                                </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantLended\"}>\n                            <button className=\"sideBar-btn select\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                已借出\n                            </button>\n                        </Link>\n                    </li>\n                </ul>\n                <div>\n                    <hr />\n                    <Link to={\"/AssistantBorrow\"}>\n                        <button className=\"sideBar-btn\">\n                            <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                            管理物品\n                            </button>\n                    </Link>\n                </div>\n            </aside>\n            {borrowLoading ? (\n                // <LoadingBox></LoadingBox>\n                <div>loading</div>\n            ) : borrowError ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{borrowError}</div>\n            ) : (\n                        <div className=\"today_content\">\n                            {borrowItems.length === 0 ? (\n                                <div className=\"personal-borrowRecord-none\"><i class=\"fa fa-history\" aria-hidden=\"true\"></i><p>尚未有借用預約</p></div>\n                            ) : (\n                                    borrowItems.map((item, index) => (\n                                        <div>\n                                            { (index == 0 || (index > 0 && item.reservedDate != borrowItems[index - 1].reservedDate)) ?\n                                                <div className=\"today_date\">\n                                                    <p>{item.reservedDate}</p>\n                                                </div> : null\n                                            }\n                                            <div className=\"content_box\">\n                                                <div>\n                                                    <p className=\"obj_name\">{item.name}</p>\n                                                    <div className=\"reserved_content\">\n                                                        <div className=\"reserved-photo\">\n                                                            <img src={\"../\" + item.image} alt=\"\" className=\"reserved-photo-img\"></img>\n                                                        </div>\n                                                        <div>\n                                                            <div className=\"reserved_info\">\n                                                                <table>\n                                                                    <tr>\n                                                                        <th>借物學生</th>\n                                                                        <td>{item.stuNumber} &nbsp; <span>{item.stuName}</span></td>\n                                                                        <th>借物理由</th>\n                                                                        <td>{item.reservedReason}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <th>聯絡電話</th>\n                                                                        <td>{item.stuPhone}</td>\n                                                                        <th>拿取時間</th>\n                                                                        <td>{item.getTime}</td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <th>E-mail</th>\n                                                                        <td colspan=\"3\">{item.stuEmail}</td>\n                                                                    </tr>\n                                                                </table>\n                                                            </div>\n                                                        </div>\n                                                        <button className=\"primary-btn-M-O\" onClick={() => returnBorrow(item.reservedState, item._id, item.name, item.reservedDate, item.stuNumber)}>歸還</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                )\n                            }\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default AssistantLendedScreen;","/Users/jennifer/Desktop/frontend/src/screens/BorrowRecordScreen.js",["163","164","165","166","167","168","169"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/borrowRecord.css'\n\nconst BorrowRecordScreen = (props) => {\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const { itemsInfo, borrowInfo } = useContext(StateContext);\n    const { items, loading, error } = itemsInfo;\n    const { borrowItems, borrowLoading, borrowError } = borrowInfo;\n    const dispatch = useContext(DispatchContext);\n\n    var item = {}\n\n    if (items.length != 0 && items) {\n        item = items.find(\n            (x) => x._id === props.match.params.id\n        );\n    }\n\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"租借紀錄\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n\n                const { data } = await axios.post(SERVER_URL + \"/api/reserved/record\", {name:item.name});\n                dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.RESERVED_ITEMS_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"borrowRecord-content\">\n            {borrowLoading ? (\n                // <LoadingBox></LoadingBox>\n                <div>loading</div>\n            ) : borrowError ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{borrowError}</div>\n            ) : (\n                        <div>\n                            <div className=\"item-name\">{item.name}</div>\n                            <div className=\"line\"></div>\n                            <div className=\"mainContent\">\n                                <table>\n                                    <tr>\n                                        <th>借用日期</th>\n                                        <th>借物學生</th>\n                                        <th>聯絡方式</th>\n                                        <th>借用理由</th>\n                                        <th>租借狀態</th>\n                                        <th>歸還日期</th>\n                                    </tr>\n                                    {borrowItems.length === 0 ? (\n                                        <div className=\"personal-borrowRecord-none\"><i class=\"fa fa-history\" aria-hidden=\"true\"></i><p>尚未有歷史紀錄</p></div>\n                                    ) : (\n                                            borrowItems.map((borrowitem) => (\n                                                <tr>\n                                                    <td>{borrowitem.reservedDate}</td>\n                                                    <td>{borrowitem.stuNumber}&nbsp; {borrowitem.stuName}</td>\n                                                    <td>{borrowitem.stuPhone} <br></br> {borrowitem.stuEmail}</td>\n                                                    <td>{borrowitem.reservedReason}</td>\n                                                    <td>{borrowitem.reservedState}</td>\n                                                    <td>一</td>\n                                                </tr>\n                                            ))\n                                        )}\n                                </table>\n                            </div>\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default BorrowRecordScreen;","/Users/jennifer/Desktop/frontend/src/screens/AssistantTodayScreen.js",["170","171","172","173","174"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/assistant_today.css'\n\nconst today = new Date();\nconst currentDay = today.getDate();\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nconst todayDate = currentYear.toString() + \"-\" + + (currentMonth + 1).toString() + \"-\" + currentDay.toString();\n\nconst AssistantTodayScreen = () => {\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const { borrowInfo } = useContext(StateContext);\n    const { borrowItems, borrowLoading, borrowError } = borrowInfo;\n    const dispatch = useContext(DispatchContext);\n\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"物品總覽-今日預約\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n                const { data } = await axios.post(SERVER_URL + \"/api/reserved/today\", {\n                    reservedDate: todayDate\n                });\n                dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.RESERVED_ITEMS_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    const changeState = async (reservedState, borrowId) => {\n        // dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.put(SERVER_URL + \"/api/reserved/\" + borrowId + \"/changeState\", {\n                reservedState\n            });\n            dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n            const { data } = await axios.post(SERVER_URL + \"/api/reserved/today\", {\n                reservedDate: todayDate\n            });\n            dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const removeBorrow = async (borrowId, name, alreadyBorrowDate, stuNumber) => {\n        dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.post(SERVER_URL + \"/api/reserved/remove\", {\n                _id: borrowId\n            });\n            const { data } = await axios.put(SERVER_URL + \"/api/items/findItem\", {\n                name\n            });\n            await axios.put(SERVER_URL + \"/api/items/\" + data._id + \"/removeAlreadyBorrowDate\", {\n                alreadyBorrowDate\n            });\n            removeUserReserved(stuNumber, name, alreadyBorrowDate);\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const returnBorrow = async (reservedState, borrowId, name, alreadyBorrowDate, stuNumber) => {\n        dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.put(SERVER_URL + \"/api/reserved/\" + borrowId + \"/changeState\", {\n                reservedState\n            });\n            const { data } = await axios.put(SERVER_URL + \"/api/items/findItem\", {\n                name\n            });\n            await axios.put(SERVER_URL + \"/api/items/\" + data._id + \"/removeAlreadyBorrowDate\", {\n                alreadyBorrowDate\n            });\n            removeUserReserved(stuNumber, name, alreadyBorrowDate);\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const removeUserReserved = async (number, reservedName, reservedDate) => {\n        try {\n            await axios.put(SERVER_URL + \"/api/users/deleteReserved\", {\n                number,\n                reservedName,\n                reservedDate\n            });\n            // dispatch({ type: actionType.USER_UPDATE_RESERVED, payload: data });\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    return (\n        <div className=\"assistant_today-content\">\n            <aside className=\"sidebar\">\n                <ul>\n                    <li>\n                        <Link to={\"/AssistantOverview\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\n                                總覽\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantToday\"}>\n                            <button className=\"sideBar-btn  select\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"></i>\n                                今日預約\n                            </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantReserved\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                                已預約\n                                </button>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={\"/AssistantLended\"}>\n                            <button className=\"sideBar-btn\" onclick=\"SideBar(event)\">\n                                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                已借出\n                            </button>\n                        </Link>\n                    </li>\n                </ul>\n                <div>\n                    <hr />\n                    <Link to={\"/AssistantBorrow\"}>\n                        <button className=\"sideBar-btn\">\n                            <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                            管理物品\n                            </button>\n                    </Link>\n                </div>\n            </aside>\n            <div className=\"today_content\">\n                <div className=\"today_date\">\n                    <p>{todayDate}</p>\n                </div>\n                {borrowLoading ? (\n                    // <LoadingBox></LoadingBox>\n                    <div>loading</div>\n                ) : borrowError ? (\n                    // <MessageBox variant=\"danger\">{error}</MessageBox>\n                    <div>{borrowError}</div>\n                ) : (\n                            <div>\n                                {borrowItems.length === 0 ? (\n                                    <div className=\"personal-borrowRecord-none\"><i class=\"fa fa-history\" aria-hidden=\"true\"></i><p>今日尚未有預約</p></div>\n                                ) : (\n                                        borrowItems.map((item) => (\n                                            <div className=\"content_box\">\n                                                <p className=\"obj_name\">{item.name}</p>\n                                                <div className=\"reserved_content\">\n                                                    <div className=\"reserved-photo\">\n                                                        <img src={\"../\" + item.image} alt=\"\" className=\"reserved-photo-img\"></img>\n                                                    </div>\n                                                    <div>\n                                                        <div className=\"reserved_info\">\n                                                            <table>\n                                                                <tr>\n                                                                    <th>借物學生</th>\n                                                                    <td>{item.stuNumber} &nbsp; <span>{item.stuName}</span></td>\n                                                                    <th>借物理由</th>\n                                                                    <td>{item.reservedReason}</td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th>聯絡電話</th>\n                                                                    <td>{item.stuPhone}</td>\n                                                                    <th>拿取時間</th>\n                                                                    <td>{item.getTime}</td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th>E-mail</th>\n                                                                    <td colspan=\"3\">{item.stuEmail}</td>\n                                                                </tr>\n                                                            </table>\n                                                        </div>\n                                                    </div>\n                                                    {item.reservedState == \"已預約\" ?\n                                                        <div className=\"btnArea-col\">\n                                                            <button className=\"primary-btn-M-O\" onClick={() => changeState(item.reservedState, item._id)}>借出</button>\n                                                            <button className=\"secondary-btn-M\" onClick={() => removeBorrow(item._id, item.name, item.reservedDate, item.stuNumber)}>取消預約</button>\n                                                        </div> : null\n                                                    }\n                                                    {item.reservedState == \"已借出\" ?\n                                                        <button className=\"primary-btn-M-O\" onClick={() => returnBorrow(item.reservedState, item._id, item.name, item.reservedDate, item.stuNumber)}>歸還</button>\n                                                        : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        ))\n                                    )\n                                }\n                            </div>\n                        )}\n            </div>\n        </div>\n    );\n}\n\nexport default AssistantTodayScreen;","/Users/jennifer/Desktop/frontend/src/screens/CertificateScreen.js",["175","176","177","178","179","180","181"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType from \"../constants\";\nimport '../css/personal.css'\n\nconst CertificateScreen = (props) => {\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const { userSignin, borrowInfo, itemsInfo } = useContext(StateContext);\n    const { userInfo } = userSignin;\n    const { items, loading, error } = itemsInfo;\n    const { borrowItems } = borrowInfo;\n    const dispatch = useContext(DispatchContext);\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"憑證\")\n        }\n        changeHeaderTitle()\n    });\n\n    const item = borrowItems.find(\n        (x) => x._id === props.match.params.id\n    );\n\n    return (\n        <div className=\"personal-content\">\n            <div className=\"personal-detail\">\n                <div className=\"name\">{userInfo.name}</div>\n                <div className=\"number\">{userInfo.number}</div>\n            </div>\n            <div className=\"line\"></div>\n            <div className=\"personal-borrow-certificate\" key={item._id}>\n                <div className=\"item-photo\">\n                    <img src={\"../\" + item.image} alt=\"\"></img>\n                </div>\n                <div>\n                    <table>\n                        <tr>\n                            <th>物品名稱</th>\n                            <td>{item.name}</td>\n                            <th>狀態</th>\n                            <td> <div className=\"item-status-lable item-status-reserved\">{item.reservedState}</div></td>\n                            <td>{/* 這裡是被拒絕的理由 */}</td>\n                        </tr>\n                        <tr>\n                            <th>借用理由</th>\n                            <td>{item.reservedReason}</td>\n                            <th>聯絡電話</th>\n                            <td>{item.stuPhone}</td>\n                        </tr>\n                        <tr>\n                            <th>借用日期</th>\n                            <td>{item.reservedDate}</td>\n                            <th>E-mail</th>\n                            <td colspan=\"2\">{item.stuEmail}</td>\n                        </tr>\n                        <tr>\n                            <th>拿取時間</th>\n                            <td>{item.getTime}</td>\n                        </tr>\n                        {/* <tr>\n                            <th>歸還日期</th>\n                            <td>－</td>\n                        </tr> */}\n                    </table>\n                </div>\n            </div>\n            <div className=\"btnArea\">\n                <Link to={\"/Personal/\"}>\n                    <button className=\"secondary-btn-M\">返回</button>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default CertificateScreen;","/Users/jennifer/Desktop/frontend/src/screens/ManageScreen.js",["182","183","184","185","186","187","188","189","190","191","192"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\n// import items from '../json/items.json'\nimport axios from \"axios\";\n// import Calendar from \"../components/CalendarDay\"\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/manage.css'\n\n//-------------------------\nconst today = new Date();\nconst monthsArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst daysArr = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nconst currentDate = today.getDate();\nvar nodate;\nvar nextMonth = currentMonth + 1;\nvar cantChooseCantBorrowDate = [];\nvar cantChooseAlreadyBorrowDate = [];\nvar datePushArray = [];\nvar datePushArray1 = [];\nvar item = {};\n\nif (currentMonth == 11) {\n    nextMonth = 0;\n}\n\n//-------------------------\n\nconst ManageScreen = (props) => {\n    const [itemnull, setItemnull] = useState(true);\n    const { itemsInfo } = useContext(StateContext);\n    const { items, loading, error } = itemsInfo;\n    const dispatch = useContext(DispatchContext);\n\n    if (items.length != 0 && items) {\n        item = items.find(\n            (x) => x._id === props.match.params.id\n        );\n    }\n\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"管理物品\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.ITEM_LIST_REQUEST });\n                const { data } = await axios.get(SERVER_URL + \"/api/items\");\n                dispatch({ type: actionType.ITEM_LIST_SUCCESS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.ITEM_LIST_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (items.length != 0 && items) {\n            item = items.find(\n                (x) => x._id === props.match.params.id\n            );\n        }\n\n    }, [items]);\n\n    function daysInMonth(month, year) {\n        return 32 - new Date(year, month, 32).getDate();\n    }\n\n    function showDays(month, year, i) {\n        if(itemnull === false){\n        var date = i * 7 - nodate + 1\n        var days = []\n        var firstDay = new Date(year, month).getDay();\n        var daysMonth = daysInMonth(month, year);\n        for (var j = 0; j < 7; j++) {\n            if (i === 0 && j < firstDay) {\n                days.push(\n                    <td></td>\n                )\n                nodate++;\n            } else if (date > daysMonth) {\n                break;\n            } else {\n                function findCantBorrowDate(num) {\n                    for (var v = 0; v < cantChooseCantBorrowDate.length; v++) {\n                        if (num.toString() === cantChooseCantBorrowDate[v]) {\n                            return true;\n                        }\n                    }\n                }\n                function findAlreadyBorrowDate(num) {\n                    for (var v = 0; v < cantChooseAlreadyBorrowDate.length; v++) {\n                        if (num.toString() === cantChooseAlreadyBorrowDate[v]) {\n                            return true;\n                        }\n                    }\n                }\n                if (findCantBorrowDate(date) === true || (month === currentMonth && date < currentDate)) {\n                    days.push(\n                        <td value={date} className=\"date-picker gray-text\">\n                            <span>{date}</span>\n                        </td>\n                    )\n                } else if (findAlreadyBorrowDate(date) === true) {\n                    days.push(\n                        <td value={date} className=\"date-picker selected\">\n                            <span>{date}</span>\n                        </td>\n                    )\n                }\n                else {\n                    days.push(\n                        <td value={date} className=\"date-picker\">\n                            <span>{date}</span>\n                        </td>\n                    )\n                }\n\n                date++\n            }\n        }\n        return (days);\n        }\n        \n    }\n\n    function showCalendar(month, year) {\n        if (itemnull === false) {\n            cantChooseDate(month);\n            var weeks = []\n            nodate = 0\n\n            for (var i = 0; i < 6; i++) {\n                weeks.push(\n                    <tr>\n                        {showDays(month, year, i)}\n                    </tr>\n                )\n            }\n            return (weeks);\n        }\n\n    }\n\n    function cantChooseDate(month) {\n        cantChooseCantBorrowDate = [];\n        cantChooseAlreadyBorrowDate = [];\n        datePushArray = [];\n        datePushArray1 = [];\n        if (itemnull === false) {\n                if (item.cantBorrowDate != null && item.cantBorrowDate.length>=0) {\n                    item.cantBorrowDate.forEach(element => {\n                        var dateArr = element.split(\"-\");\n                        if (dateArr[0] === currentYear.toString() && dateArr[1] === (month + 1).toString()) {\n                            datePushArray.push(dateArr[2]);\n                            cantChooseCantBorrowDate = Array.from(new Set(datePushArray));\n                        }\n                    });\n                }\n                if (item.alreadyBorrowDate != null && item.alreadyBorrowDate.length>=0) {\n                    item.alreadyBorrowDate.forEach(element => {\n                        var dateArr = element.split(\"-\");\n                        if (dateArr[0] === currentYear.toString() && dateArr[1] === (month + 1).toString()) {\n                            datePushArray1.push(dateArr[2]);\n                            cantChooseAlreadyBorrowDate = Array.from(new Set(datePushArray1));\n                            console.log(cantChooseAlreadyBorrowDate);\n                        }\n                    });\n                }\n            }\n    }\n\n    useEffect(() => {\n        cantChooseCantBorrowDate = [];\n        cantChooseAlreadyBorrowDate = [];\n        datePushArray = [];\n        datePushArray1 = [];\n    }, [item]);\n\n    useEffect(() => {\n        if (item != null && item._id != undefined) {\n            setItemnull(false);\n        }\n        else {\n            setItemnull(true);\n        }\n    }, [item]);\n\n    const rednerCalender = (currentMonth) => {\n        if (itemnull === false) {\n            return (\n                showCalendar(currentMonth, currentYear)\n            )\n        }\n        else{\n            <div>loading</div>\n        }\n\n    }\n\n    return (\n        <div>\n            {loading ? (\n                // <LoadingBox></LoadingBox>\n                <div> loading</div >\n            ) : error ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{error}</div>\n            ) : (\n                        <div className=\"manage-content\">\n                            <div className=\"photoArea\">\n                                <div className=\"largePhoto\">\n                                    <img src={\"../\" + item.image} alt=\"\"></img>\n                                </div>\n                                <div className=\"threeSmallPhoto\">\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"detailArea\">\n                                <div className=\"descriptionArea\">\n                                    <div className=\"titleSection\">\n                                        <label className=\"item-name\" for=\"\">{item.name}</label>\n                                        <Link to={\"/BorrowRecord/\"+item._id}>\n                                            <button className=\"primary-btn-M-B\" name={item.name}>租借紀錄</button>\n                                        </Link>\n                                    </div>\n                                    <div className=\"line\"></div>\n                                    <div className=\"rule\">\n                                        <label for=\"\">租借規範</label>\n                                        <p>\n                                        {item.rules.map((rule) => (\n                                            <div>{rule}<br></br></div>\n                                        ))}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div className=\"calendarArea\">\n                                    <div class=\"container-calendar\">\n                                        <div class=\"button-container-calendar\">\n                                            <p id=\"monthHeader\">{monthsArr[currentMonth]}</p>\n                                        </div>\n\n                                        <table class=\"table-calendar\" id=\"calendar\">\n                                            <thead id=\"thead-month\">\n                                                <tr>\n                                                    {daysArr.map((dhead) => (\n                                                        <th data-days={dhead}>{dhead}</th>\n                                                    ))}\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"calendar-body\">\n                                                {/* {showCalendar(currentMonth, currentYear)} */}\n                                                {rednerCalender(currentMonth)}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div className=\"calendarArea\">\n                                    <div class=\"container-calendar\">\n                                        <div class=\"button-container-calendar\">\n                                            <p id=\"monthHeader\">{monthsArr[nextMonth]}</p>\n                                        </div>\n\n                                        <table class=\"table-calendar\" id=\"calendar\">\n                                            <thead id=\"thead-month\">\n                                                <tr>\n                                                    {daysArr.map((dhead) => (\n                                                        <th data-days={dhead}>{dhead}</th>\n                                                    ))}\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"calendar-body\">\n                                                {/* {showCalendar(currentMonth + 1, currentYear)} */}\n                                                {rednerCalender(currentMonth+1)}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div className=\"btnArea\">\n                                    <Link to={\"/AssistantBorrow\"}><button className=\"secondary-btn-M\">返回</button></Link>\n                                    <Link to={\"/\" + item._id + \"/Edit\"}><button className=\"primary-btn-M-B\">編輯</button></Link>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default ManageScreen;","/Users/jennifer/Desktop/frontend/src/screens/PersonalScreen.js",["193","194","195","196","197","198","199","200","201","202"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/personal.css'\n\nconst PersonalScreen = (props) => {\n    const { userSignin, borrowInfo, itemsInfo } = useContext(StateContext);\n    const { userInfo } = userSignin;\n    const { items, loading, error } = itemsInfo;\n    const { borrowItems, borrowLoading, borrowError } = borrowInfo;\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    const dispatch = useContext(DispatchContext);\n\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"個人資訊\");\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.RESERVED_ITEMS_REQUEST });\n                const { data } = await axios.post(SERVER_URL + \"/api/reserved/user\", {number:userInfo.number});\n                // console.log(data);\n                dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.RESERVED_ITEMS_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    const logOut = () => {\n        dispatch({\n            type: actionType.USER_LOGOUT,\n        });\n        props.history.push(\"/Login\")\n    }\n\n    const removeBorrow = async (borrowId, name ,alreadyBorrowDate, stuNumber)  => {\n        dispatch({ type: actionType.BORROW_REMOVE_ITEM, payload: borrowId });\n        try {\n            await axios.post(SERVER_URL + \"/api/reserved/remove\", {\n                _id: borrowId\n            });\n            const { data } = await axios.put(SERVER_URL + \"/api/items/findItem\", {\n                name\n            });\n            await axios.put(SERVER_URL + \"/api/items/\" + data._id + \"/removeAlreadyBorrowDate\", {\n                alreadyBorrowDate\n            });\n            removeUserReserved(stuNumber, name, alreadyBorrowDate);\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    const removeUserReserved = async (number, reservedName ,reservedDate)  => {\n        try {\n            await axios.put(SERVER_URL + \"/api/users/deleteReserved\", {\n                number,\n                reservedName,\n                reservedDate\n            });\n            // dispatch({ type: actionType.USER_UPDATE_RESERVED, payload: data });\n        } catch (error) {\n            alert(error);\n        }\n    };\n\n    // useEffect(() =>{\n    //     console.log(borrowItems);\n    //     console.log(userSignin);\n    // }, [borrowItems])\n\n    const handleToCertificate = (borrowId) => {\n        props.history.push(\"/Certificate/\" + borrowId);\n    };\n\n    return (\n        <div className=\"personal-content\">\n            <div className=\"personal-detail-top\">\n                <div className=\"detail\">\n                    <div className=\"name\">{userInfo.name}</div>\n                    <div className=\"number\">{userInfo.number}</div>\n                </div>\n                <div className=\"logout\">\n                    <button className=\"primary-btn-M-B\" onClick={logOut}>登出</button>\n                </div>\n            </div>\n            <div className=\"line\"></div>\n            <div className=\"personal-borrowRecord-section\">\n                <div className=\"personal-borrowRecord-title\">\n                    <label for=\"\" className=\"name\">物品名稱</label>\n                    <label for=\"\" className=\"item\">物品狀態</label>\n                    <label for=\"\" className=\"item\">租借日期</label>\n                    <label for=\"\" className=\"date\">拿取時間</label>\n                </div>\n                {borrowLoading ? (\n                // <LoadingBox></LoadingBox>\n                <div>loading</div>\n            ) : borrowError ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{borrowError}</div>\n            ) : (\n                <div>\n                {borrowItems.length === 0 ? (\n                    <div className=\"personal-borrowRecord-none\"><i class=\"fa fa-history\" aria-hidden=\"true\"></i><p>尚未借用物品</p></div>\n                ) : (\n                        borrowItems.map((item) => (\n                            <div className=\"personal-borrowRecord\" key={props.match.params.id}>\n                                <div className=\"item-area\">\n                                    <div className=\"item-photo\">\n                                        <img src={\"../\" + item.image} alt=\"IMAGE\"></img>\n                                    </div>\n                                    <p className=\"item-name\">{item.name}</p>\n                                </div>\n                                <div className=\"item-status-lable item-status-reserved\">{item.reservedState}</div>\n                                <div className=\"item-date\">{item.reservedDate}</div>\n                                <div className=\"item-time\">{item.getTime}</div>\n                                {item.reservedState == \"已預約\" ?\n                                <div className=\"btnArea-col\">\n                                    <button className=\"primary-btn-M-O\" onClick={() => handleToCertificate(item._id)}>查看憑證</button>\n                                    <button className=\"secondary-btn-M\" onClick={() => removeBorrow(item._id, item.name, item.reservedDate, item.stuNumber)}>取消預約</button>\n                                </div> : null\n                                }\n                                {item.reservedState == \"已借出\" ?\n                                    <button className=\"primary-btn-M-O\" onClick={() => handleToCertificate(item._id)}>查看憑證</button>\n                                : null\n                                }\n                            </div>\n                        ))\n                    )\n                }\n                </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default PersonalScreen;","/Users/jennifer/Desktop/frontend/src/screens/LoginScreen.js",["203","204","205","206","207","208","209","210"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Cookie from \"js-cookies\"\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/login.css'\nimport axios from \"axios\";\nimport users from '../json/user.json'\n\nconst LoginScreen = (props) => {\n    const [number, setNumber] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useContext(DispatchContext);\n    const { userSignin, error } = useContext(StateContext);\n    const { userInfo } = userSignin;\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        verifyUser(number,password);\n    }\n\n    const getBorrowItems = async (number) => { \n        try {\n            const { data } = await axios.post(SERVER_URL + \"/api/reserved/user\", {\n                number\n            });\n            dispatch({ type: actionType.RESERVED_GET_ITEMS, payload: data });\n            props.history.push(\"/\");\n        } catch (error) {\n            alert(error)\n        }\n    };\n\n    const verifyUser = async (number, password) => { \n        try {\n            const { data } = await axios.post(SERVER_URL + \"/api/users/login\", {\n                number, password\n            });\n            dispatch({ type: actionType.USER_SIGNIN_SUCCESS, payload: data });\n            if(data.identity === \"student\"){\n                getBorrowItems(number);\n            }\n            else{\n                props.history.push(\"/AssistantOverview\");\n            }\n        } catch (error) {\n            if(error.message == \"Request failed with status code 402\"){\n                alert(\"密碼錯誤\");\n            }else if(error.message == \"Request failed with status code 401\"){\n                alert(\"帳號密碼錯誤\");\n            }\n        }\n\n        // const data = users.find(\n        //     (x) => x.number === number \n        // );\n        // if (data){\n        //     if (data.password === password) {\n        //         dispatch({\n        //             type: actionType.USER_SIGNIN_SUCCESS,\n        //             payload: {\n        //                 name: data.name,\n        //                 number: data.number,\n        //                 identity: data.identity,\n        //             }\n        //         });\n        //         if(data.identity === \"student\"){\n        //             props.history.push(\"/\");\n        //         }\n        //         else{\n        //             props.history.push(\"/AssistantOverview\");\n        //         }\n        //     }\n        //     else{\n        //         alert(\"密碼錯誤\");\n        //     }\n        // }\n        // else{\n        //     alert(\"帳號密碼錯誤\");\n        // }\n    };\n\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"登入\")\n        }\n        changeHeaderTitle()\n    });\n\n    return (\n        <div class=\"login-content\">\n            <form onSubmit={submitHandler}>\n                <div class=\"login-title\">帳號登入</div>\n                <div class=\"login-box\">\n                    <div class=\"account\">\n                        <div class=\"login-input\">\n                            <label for=\"\">帳號</label>\n                            <input type=\"text\" onChange={(e) => setNumber(e.target.value)}></input>\n                        </div>\n                        <p class=\"description\">學生請輸入學生證，助教請輸入教職員編號</p>\n                    </div>\n                    <div class=\"password\">\n                        <div class=\"login-input\">\n                            <label for=\"\">密碼</label>\n                            <input type=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                        </div>\n                        <p class=\"description\">系統預設身分證末四碼</p>\n                    </div>\n                    <button type=\"submit\" class=\"primary-btn-L login-btn\">登入</button>\n                </div>\n            </form>\n\n        </div>\n    );\n}\n\nexport default LoginScreen;","/Users/jennifer/Desktop/frontend/src/screens/BorrowScreen.js",["211","212","213","214","215","216","217","218","219","220","221"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\n// import items from '../json/items.json'\nimport axios from \"axios\";\n// import Calendar from \"../components/CalendarDay_single\"\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/borrow.css'\n\n//----------------------\nconst today = new Date();\nconst monthsArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst daysArr = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nconst currentDate = today.getDate();\nvar chooseDate = \"\";\nvar nodate;\nvar cantChooseDate = [];\nvar datePushArray = [];\n\nconst clickedDate = (e) => {\n    var preSelect = document.querySelector(\".date-picker.selected\");\n    if (preSelect) {\n        preSelect.className = \"date-picker\";\n        e.className = \"date-picker selected\";\n    } else {\n        e.className = \"date-picker selected\";\n    }\n    chooseDate = currentYear.toString() + \"-\" + (currentMonth + 1).toString() + \"-\" + e.getAttribute('value');\n};\n\nfunction daysInMonth(month, year) {\n    return 32 - new Date(year, month, 32).getDate();\n}\n\nfunction showDays(month, year, i) {\n\n    var date = i * 7 - nodate + 1\n    var days = []\n    var firstDay = new Date(year, month).getDay();\n    var daysMonth = daysInMonth(month, year);\n    for (var j = 0; j < 7; j++) {\n        if (i === 0 && j < firstDay) {\n            days.push(\n                <td></td>\n            )\n            nodate++;\n        } else if (date > daysMonth) {\n            break;\n        } else {\n            function findNum(num) {\n                for (var v = 0; v < cantChooseDate.length; v++) {\n                    if (num.toString() === cantChooseDate[v]) {\n                        return true;\n                    }\n                }\n            }\n            if (findNum(date) === true || date < currentDate) {\n                days.push(\n                    <td value={date} className=\"date-picker gray-text\">\n                        {/* className={`${state.open ? \"date-picker selected\" : \"date-picker\"}`}> */}\n                        <span>{date}</span>\n                    </td>\n                )\n            }\n            else {\n                days.push(\n                    <td value={date} className=\"date-picker\" onClick={(e) => clickedDate(e.currentTarget)}>\n                        {/* className={`${state.open ? \"date-picker selected\" : \"date-picker\"}`}> */}\n                        <span>{date}</span>\n                    </td>\n                )\n            }\n            date++\n        }\n    }\n    return (days);\n}\n\n\n//----------------------\n\nconst BorrowScreen = (props) => {\n    const { itemsInfo, userSignin } = useContext(StateContext);\n    const { userInfo } = userSignin;\n    const { items, loading, error } = itemsInfo;\n    const { name, number } = userInfo;\n    const dispatch = useContext(DispatchContext);\n\n    var item = {};\n    // var selectedIndex = -1;\n    const [stuPhone, setStuPhone] = useState(\"\");\n    const [stuEmail, setStuEmail] = useState(\"\");\n    const [reservedReason, setReservedReason] = useState(\"\");\n    const [getTime, setGetTime] = useState(\"\");\n    const [itemnull, setItemnull] = useState(true);\n\n    if (items.length != 0 && items) {\n        item = items.find(\n            (x) => x._id === props.match.params.id\n        );\n    }\n    function showCalendar(month, year) {\n        if (itemnull === false) {\n            var weeks = []\n            nodate = 0\n            for (var i = 0; i < 6; i++) {\n                weeks.push(\n                    <tr>\n                        {showDays(month, year, i)}\n                    </tr>\n                )\n            }\n            return (weeks);\n        }\n\n    }\n\n    const saveBorrowItem = async () => {\n        try {\n            const { data } = await axios.post(SERVER_URL + \"/api/reserved/add\", {\n                name: item.name,\n                image: item.image,\n                stuName: name,\n                stuNumber: number,\n                stuPhone,\n                stuEmail,\n                reservedDate: chooseDate,\n                reservedReason,\n                getTime\n            });\n            // dispatch({ type: actionType.RESERVED_ADD_ITEM, payload: data });\n            //   Cookie.set(\"userInfo\", JSON.stringify(data));\n            props.history.push(\"/Personal\");\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n    const handleAddToBorrow = async () => {\n        //selectReason()\n        console.log(reservedReason);\n        //if (selectedIndex >= 0) {\n        if (reservedReason.length > 0) {\n            if (getTime.length > 0) {\n                try {\n                    const { data } = await axios.put(SERVER_URL + \"/api/users/addReserved\", {\n                        number,\n                        reservedName: item.name,\n                        reservedDate: chooseDate\n                    });\n                    await axios.put(SERVER_URL + \"/api/items/\" + props.match.params.id + \"/addAlreadyBorrowDate\", {\n                        alreadyBorrowDate: chooseDate\n                    });\n                    // dispatch({ type: actionType.USER_UPDATE_RESERVED, payload: data });\n                    //   Cookie.set(\"userInfo\", JSON.stringify(data));\n                    saveBorrowItem();\n                } catch (error) {\n                    alert(error);\n                }\n            } else {\n                alert(\"沒有選擇拿取時間\");\n            }\n        } else {\n            alert(\"沒有輸入租借理由\");\n        }\n    }\n    // else {\n    //     alert(\"沒有選擇租借理由\");\n    // }\n\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"借用物品\");\n        }\n        changeHeaderTitle()\n    });\n\n    // useEffect(()=>{\n    //     handleAddToBorrow();\n    // },[reservedReason]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.ITEM_LIST_REQUEST });\n                const { data } = await axios.get(SERVER_URL + \"/api/items\");\n                dispatch({ type: actionType.ITEM_LIST_SUCCESS, payload: data });\n            } catch (error) {\n                dispatch({\n                    type: actionType.ITEM_LIST_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (items.length != 0 && items) {\n            item = items.find(\n                (x) => x._id === props.match.params.id\n            );\n        }\n    }, [items]);\n\n    useEffect(() => {\n        cantChooseDate = [];\n        datePushArray = [];\n        console.log(\"xxx=\" + cantChooseDate);\n        console.log(item.alreadyBorrowDate);\n        console.log(item)\n        \n        if (itemnull === false) {\n            if (item.cantBorrowDate!=null && item.cantBorrowDate.length > 0) {\n                item.cantBorrowDate.forEach(element => {\n                    var dateArr = element.split(\"-\");\n                    if (dateArr[0] === currentYear.toString() && dateArr[1] === (currentMonth + 1).toString()) {\n                        datePushArray.push(dateArr[2]);\n                        cantChooseDate = Array.from(new Set(datePushArray));\n                    }\n                });\n            }\n            if (item.alreadyBorrowDate!=null && item.alreadyBorrowDate.length > 0) {\n                item.alreadyBorrowDate.forEach(element => {\n                    var dateArr = element.split(\"-\");\n                    if (dateArr[0] === currentYear.toString() && dateArr[1] === (currentMonth + 1).toString()) {\n                        datePushArray.push(dateArr[2]);\n                        cantChooseDate = Array.from(new Set(datePushArray));\n                    }\n                });\n            }\n        }\n    }, [item, itemnull]);\n\n    useEffect(() => {\n        if (item != null && item._id != undefined) {\n            setItemnull(false);\n        }\n        else {\n            setItemnull(true);\n        }\n    }, [item]);\n\n    const rednerCalender = () => {\n        if (itemnull === false) {\n            return (\n                showCalendar(currentMonth, currentYear)\n            )\n        }\n        else{\n            <div>loading</div>\n        }\n\n    }\n\n    return (\n        <div>\n            {loading ? (\n                // <LoadingBox></LoadingBox>\n                <div> loading</div >\n            ) : error ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{error}</div>\n            ) : (\n                        <div className=\"borrowContent\">\n                            <div className=\"photoArea\">\n                                <div className=\"largePhoto\">\n                                    <img src={\"../\" + item.image} alt=\"\"></img>\n                                </div>\n                                <div className=\"threeSmallPhoto\">\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"detailArea\">\n                                <div className=\"descriptionArea\">\n                                    <label className=\"item-name\" for=\"\">{item.name}</label>\n                                    <div className=\"line\"></div>\n                                    <div className=\"rule\">\n                                        <label for=\"\">租借規範</label>\n                                        <p>＊教室不能吃東西<br></br>＊務必在16:30 之前歸還鑰匙</p>\n                                    </div>\n                                </div>\n                                <div className=\"reserved_area\">\n                                    <label className=\"item-name\" for=\"\">輸入借用資訊</label>\n                                    <div className=\"line\"></div>\n                                    <div className=\"reserved_form\">\n                                        <div className=\"reserved_row\">\n                                            <label for=\"\" className=\"reserved_label\">手機</label>\n                                            <input type=\"tel\" name=\"\" id=\"\" className=\"reserved_input\" onChange={(e) => setStuPhone(e.target.value)}></input>\n                                        </div>\n                                        <div className=\"reserved_row\">\n                                            <label for=\"\" className=\"reserved_label\">E-mail</label>\n                                            <input type=\"email\" name=\"\" id=\"\" className=\"reserved_input\" onChange={(e) => setStuEmail(e.target.value)}></input>\n                                        </div>\n                                        <div className=\"reserved_row\">\n                                            <label for=\"\" className=\"reserved_label\">借用理由</label>\n                                            <div className=\"reason_option\">\n                                                <label><input type=\"radio\" name=\"reason\" id=\"\" onClick={() => setReservedReason(\"系上活動需要\")}></input>系上活動需要</label>\n                                                <label><input type=\"radio\" name=\"reason\" id=\"\" onClick={() => setReservedReason(\"系學會需要\")}></input>系學會需要</label>\n                                                <label><input type=\"radio\" name=\"reason\" id=\"\" onClick={() => setReservedReason(\"系上課程需要\")}></input>系上課程需要</label>\n                                                <label><input type=\"radio\" name=\"reason\" id=\"\" onClick={() => setReservedReason(\"系上球隊需要\")}></input>系上球隊需要</label>\n                                                <label><input type=\"radio\" name=\"reason\" id=\"\" onClick={() => setReservedReason(\"系上社團需要\")}></input>系上社團需要</label>\n                                                <label><input type=\"radio\" name=\"reason\" id=\"\"></input>其他 <input type=\"text\" className=\"reserved_input\" onChange={(e) => setReservedReason(e.target.value)}></input></label>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <label for=\"\" className=\"reserved_label\">借用日期</label>\n                                            <div className=\"calendarArea\">\n                                                <div class=\"container-calendar\">\n                                                    <div class=\"button-container-calendar\">\n                                                        <p id=\"monthHeader\">{monthsArr[currentMonth]}</p>\n                                                    </div>\n\n                                                    <table class=\"table-calendar\" id=\"calendar\">\n                                                        <thead id=\"thead-month\">\n                                                            <tr>\n                                                                {daysArr.map((dhead) => (\n                                                                    <th data-days={dhead}>{dhead}</th>\n                                                                ))}\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody id=\"calendar-body\">\n                                                            {/* {showCalendar(currentMonth, currentYear)} */}\n                                                            {rednerCalender()}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"reserved_row\">\n                                            <label for=\"\" className=\"reserved_label\">拿取時間</label>\n                                            <input type=\"time\" name=\"\" id=\"\" min=\"09:00\" max=\"17:00\" onChange={(e) => setGetTime(e.target.value)}></input>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"btnArea\">\n                                    <Link to={\"/\"}>\n                                        <button className=\"secondary-btn-M\">取消</button>\n                                    </Link>\n                                    <button type=\"submit\" className=\"primary-btn-M-O\" onClick={handleAddToBorrow}>確定</button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default BorrowScreen;","/Users/jennifer/Desktop/frontend/src/screens/EditScreen.js",["222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n// import Calendar from \"../components/CalendarDay\"\nimport { StateContext, DispatchContext, HeaderContext } from \"../contexts\"\nimport actionType, { SERVER_URL } from \"../constants\";\nimport '../css/edit.css'\n\n//-------------------------\nconst today = new Date();\nconst monthsArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst daysArr = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\nconst currentMonth = today.getMonth();\nconst currentYear = today.getFullYear();\nconst currentDate = today.getDate();\nvar nodate;\nvar nextMonth = currentMonth + 1;\nvar cantBorrowDate = [];\nvar cantChooseCantBorrowDate = [];\nvar cantChooseAlreadyBorrowDate = [];\nvar datePushArray = [];\nvar datePushArray1 = [];\nvar item = {};\nvar ruleString = '';\n\nif (currentMonth == 11) {\n    nextMonth = 0;\n}\n\n//-------------------------\n\nconst EditScreen = (props) => {\n    const [itemnull, setItemnull] = useState(true);\n    const { itemsInfo } = useContext(StateContext);\n    const { items, loading, error } = itemsInfo;\n    const dispatch = useContext(DispatchContext);\n    const [name, setName] = useState(\"\");\n    const history = useHistory();\n\n    var rules\n\n    if (items.length != 0 && items) {\n        item = items.find(\n            (x) => x._id === props.match.params.id\n        );\n    }\n\n    const [headerContext, setHeaderContext] = useContext(HeaderContext);\n    useEffect(() => {\n        const changeHeaderTitle = () => {\n            setHeaderContext(\"編輯物品\")\n        }\n        changeHeaderTitle()\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                dispatch({ type: actionType.ITEM_LIST_REQUEST });\n                const { data } = await axios.get(SERVER_URL + \"/api/items\");\n                dispatch({ type: actionType.ITEM_LIST_SUCCESS, payload: data });\n                setName(item.name)\n            } catch (error) {\n                dispatch({\n                    type: actionType.ITEM_LIST_FAIL,\n                    payload: error.message,\n                });\n            }\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (items.length != 0 && items) {\n            item = items.find(\n                (x) => x._id === props.match.params.id\n            );\n        }\n    }, [items]);\n\n    const submitHandler = async () => {\n        console.log(name)\n        // e.preventDefault();\n        dispatch({\n            type: actionType.ITEM_DETAILS_UPDATE_REQUEST\n        });\n        rules = document.getElementById(\"ruleTextarea\").value.replace(/\\r\\n/g,\"\\n\").split(\"\\n\");\n        try {\n            const { data } = await axios.put(SERVER_URL + \"/api/items/\" + props.match.params.id + \"/edit\", {\n                name,\n                cantBorrowDate,\n                rules\n            });\n            dispatch({ type: actionType.ITEM_DETAILS_UPDATE_SUCCESS, payload: data });\n            //   Cookie.set(\"userInfo\", JSON.stringify(data));\n            history.push(\"/Manage/\" + props.match.params.id);\n        } catch (error) {\n            dispatch({\n                type: actionType.ITEM_DETAILS_UPDATE_FAIL,\n                payload: error.message,\n            });\n        }\n    }\n\n    const clickedDate = (e) => {\n        if (e.className == \"date-picker\") {\n            e.className = \"date-picker selected\"\n            cantBorrowDate.push(e.getAttribute('data-year') + \"-\" + e.getAttribute('data-month') + \"-\" + e.getAttribute('data-date'));\n        } else {\n            e.className = \"date-picker\"\n            const index = cantBorrowDate.indexOf(e.getAttribute('data-year') + \"-\" + e.getAttribute('data-month') + \"-\" + e.getAttribute('data-date'));\n            if (index !== -1) {\n                cantBorrowDate.splice(index, 1);\n            }\n        }\n        console.log(cantBorrowDate);\n    };\n    \n    function daysInMonth(month, year) {\n        return 32 - new Date(year, month, 32).getDate();\n    }\n    \n    function showDays(month, year, i) {\n        if(itemnull === false){\n        var date = i * 7 - nodate + 1\n        var days = []\n        var firstDay = new Date(year, month).getDay();\n        var daysMonth = daysInMonth(month, year);\n        cantChooseCantBorrowDate = [];\n        cantChooseAlreadyBorrowDate = [];\n        datePushArray = [];\n        datePushArray1 = [];\n        cantChooseDate(month);\n        for (var j = 0; j < 7; j++) {\n            if (i === 0 && j < firstDay) {\n                days.push(\n                    <td></td>\n                )\n                nodate++;\n            } else if (date > daysMonth) {\n                break;\n            } else {\n                function findCantBorrowDate(num) {\n                    for (var v = 0; v < cantChooseCantBorrowDate.length; v++) {\n                        if (num.toString() === cantChooseCantBorrowDate[v]) {\n                            return true;\n                        }\n                    }\n                }\n                function findAlreadyBorrowDate(num) {\n                    for (var v = 0; v < cantChooseAlreadyBorrowDate.length; v++) {\n                        if (num.toString() === cantChooseAlreadyBorrowDate[v]) {\n                            return true;\n                        }\n                    }\n                }\n                if (month === currentMonth && date < currentDate) {\n                    days.push(\n                        <td data-date={date} data-month={month + 1} data-year={year} className=\"date-picker gray-text\">\n                            <span>{date}</span>\n                        </td>\n                    )\n                }\n                else if (findAlreadyBorrowDate(date) === true) {\n                    days.push(\n                        <td data-date={date} data-month={month + 1} data-year={year} className=\"date-picker cantSelected\">\n                            <span>{date}</span>\n                        </td>\n                    )\n                }\n                else if (findCantBorrowDate(date) === true) {\n                    // var class_name = \"date-picker selected\"\n                    // const index = cantBorrowDate.indexOf(year.toString() + \"-\" + (month + 1).toString() + \"-\" + date.toString());\n                    // if (index !== -1) {\n                    //     class_name = \"date-picker\"\n                    // }\n                    days.push(\n                        <td data-date={date} data-month={month + 1} data-year={year} className=\"date-picker selected\" onClick={(e) => clickedDate(e.currentTarget)}>\n                            <span>{date}</span>\n                        </td>\n                    )\n                }\n                else {\n                    // var class_name = \"date-picker\"\n                    // const index = cantBorrowDate.indexOf(year.toString() + \"-\" + (month + 1).toString() + \"-\" + date.toString());\n                    // if (index !== -1) {\n                    //     class_name = \"date-picker selected\"\n                    // }\n                    days.push(\n                        <td data-date={date} data-month={month + 1} data-year={year} className=\"date-picker\" onClick={(e) => clickedDate(e.currentTarget)}>\n                            <span>{date}</span>\n                        </td>\n                    )\n                }\n    \n                date++\n            }\n        }\n        return (days);\n    }}\n    \n    function showCalendar(month, year) {\n        if (itemnull === false) {\n            cantChooseDate(month);\n            var weeks = []\n            nodate = 0\n\n            for (var i = 0; i < 6; i++) {\n                weeks.push(\n                    <tr>\n                        {showDays(month, year, i)}\n                    </tr>\n                )\n            }\n            return (weeks);\n        }\n\n    }\n    function cantChooseDate(month) {\n        cantChooseCantBorrowDate = [];\n        cantChooseAlreadyBorrowDate = [];\n        datePushArray = [];\n        datePushArray1 = [];\n        if (itemnull === false) {\n                if (item.cantBorrowDate != null && item.cantBorrowDate.length>=0) {\n                    item.cantBorrowDate.forEach(element => {\n                        var dateArr = element.split(\"-\");\n                        if (dateArr[0] === currentYear.toString() && dateArr[1] === (month + 1).toString()) {\n                            datePushArray.push(dateArr[2]);\n                            cantChooseCantBorrowDate = Array.from(new Set(datePushArray));\n                        }\n                    });\n                }\n                if (item.alreadyBorrowDate != null && item.alreadyBorrowDate.length>=0) {\n                    item.alreadyBorrowDate.forEach(element => {\n                        var dateArr = element.split(\"-\");\n                        if (dateArr[0] === currentYear.toString() && dateArr[1] === (month + 1).toString()) {\n                            datePushArray1.push(dateArr[2]);\n                            cantChooseAlreadyBorrowDate = Array.from(new Set(datePushArray1));\n                            console.log(cantChooseAlreadyBorrowDate);\n                        }\n                    });\n                }\n            }\n    }\n\n    useEffect(() => {\n        cantChooseCantBorrowDate = [];\n        cantChooseAlreadyBorrowDate = [];\n        datePushArray = [];\n        datePushArray1 = [];\n    }, [item]);\n\n    useEffect(() => {\n        if (item != null && item._id != undefined) {\n            setItemnull(false);\n            cantBorrowDate = item.cantBorrowDate;\n        }\n        else {\n            setItemnull(true);\n        }\n        ruleString = '';\n        for(var i=0; i<item.rules.length;i++){\n            ruleString+=item.rules[i]+\"\\n\"\n        }\n    }, [item]);\n\n    const rednerCalender = (currentMonth) => {\n        if (itemnull === false) {\n            return (\n                showCalendar(currentMonth, currentYear)\n            )\n        }\n        else{\n            <div>loading</div>\n        }\n\n    }\n    return (\n        <div>\n            {loading ? (\n                // <LoadingBox></LoadingBox>\n                <div> loading</div>\n            ) : error ? (\n                // <MessageBox variant=\"danger\">{error}</MessageBox>\n                <div>{error}</div>\n            ) : (\n                        <div className=\"editContent\">\n                            <div className=\"photoArea\">\n                                <div className=\"icon-btn-S deleteBtn\">\n                                    <i className=\"fa fa-times \" aria-hidden=\"true\"></i>\n                                </div>\n                                <div className=\"largePhoto\">\n                                    <img src={\"../\" + item.image} alt=\"\"></img>\n                                </div>\n                                <div className=\"threeSmallPhoto\">\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                    <div className=\"smallPhoto\">\n                                        <img src={\"../\" + item.image} alt=\"\"></img>\n                                    </div>\n                                    <div className=\"smallPhoto\">\n                                        <div className=\"icon-btn-M\">\n                                            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"detailArea\">\n                                <div className=\"descriptionArea\">\n                                    <input className=\"item-name-input\" type=\"text\" defaultValue={item.name} onChange={(e) => setName(e.target.value)}></input>\n                                    <div className=\"line\"></div>\n                                    <div className=\"rule\">\n                                        <label for=\"\">租借規範</label>\n                                        {/* <!-- &#10 換行符號 --> */}\n                                        <textarea id=\"ruleTextarea\">\n                                            {ruleString}\n                                        </textarea>\n                                    </div>\n                                </div>\n                                <div className=\"calendarArea\">\n                                    <div class=\"container-calendar\">\n                                        <div class=\"button-container-calendar\">\n                                            <p id=\"monthHeader\">{monthsArr[currentMonth]}</p>\n                                        </div>\n\n                                        <table class=\"table-calendar\" id=\"calendar\">\n                                            <thead id=\"thead-month\">\n                                                <tr>\n                                                    {daysArr.map((dhead) => (\n                                                        <th data-days={dhead}>{dhead}</th>\n                                                    ))}\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"calendar-body\">\n                                                {/* {showCalendar(currentMonth, currentYear)} */}\n                                                {rednerCalender(currentMonth)}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div className=\"calendarArea\">\n                                    <div class=\"container-calendar\">\n                                        <div class=\"button-container-calendar\">\n                                            <p id=\"monthHeader\">{monthsArr[nextMonth]}</p>\n                                        </div>\n\n                                        <table class=\"table-calendar\" id=\"calendar\">\n                                            <thead id=\"thead-month\">\n                                                <tr>\n                                                    {daysArr.map((dhead) => (\n                                                        <th data-days={dhead}>{dhead}</th>\n                                                    ))}\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"calendar-body\">\n                                                {/* {showCalendar(currentMonth + 1, currentYear)} */}\n                                                {rednerCalender(currentMonth+1)}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div className=\"btnArea\">\n                                    <Link to={\"/Manage/\" + props.match.params.id}>\n                                        <button className=\"secondary-btn-M\">取消</button>\n                                    </Link>\n                                    <button className=\"primary-btn-M-O\" onClick={submitHandler}>確定</button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default EditScreen;",{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":1,"column":29,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"242","line":2,"column":25,"nodeType":"240","messageId":"241","endLine":2,"endColumn":30},{"ruleId":"238","severity":1,"message":"243","line":2,"column":32,"nodeType":"240","messageId":"241","endLine":2,"endColumn":38},{"ruleId":"238","severity":1,"message":"244","line":2,"column":40,"nodeType":"240","messageId":"241","endLine":2,"endColumn":44},{"ruleId":"238","severity":1,"message":"245","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"246","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"247","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":13},{"ruleId":"238","severity":1,"message":"248","line":1,"column":40,"nodeType":"240","messageId":"241","endLine":1,"endColumn":50},{"ruleId":"238","severity":1,"message":"249","line":1,"column":52,"nodeType":"240","messageId":"241","endLine":1,"endColumn":60},{"ruleId":"238","severity":1,"message":"250","line":9,"column":28,"nodeType":"240","messageId":"241","endLine":9,"endColumn":44},{"ruleId":"251","severity":1,"message":"252","line":32,"column":8,"nodeType":"253","endLine":32,"endColumn":27,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":20,"column":18,"nodeType":"257","messageId":"258","endLine":20,"endColumn":20},{"ruleId":"255","severity":1,"message":"256","line":25,"column":56,"nodeType":"257","messageId":"258","endLine":25,"endColumn":58},{"ruleId":"255","severity":1,"message":"256","line":25,"column":111,"nodeType":"257","messageId":"258","endLine":25,"endColumn":113},{"ruleId":"259","severity":1,"message":"260","line":30,"column":9,"nodeType":"240","messageId":"261","endLine":30,"endColumn":10},{"ruleId":"255","severity":1,"message":"256","line":31,"column":53,"nodeType":"257","messageId":"258","endLine":31,"endColumn":55},{"ruleId":"255","severity":1,"message":"256","line":31,"column":105,"nodeType":"257","messageId":"258","endLine":31,"endColumn":107},{"ruleId":"255","severity":1,"message":"256","line":39,"column":20,"nodeType":"257","messageId":"258","endLine":39,"endColumn":22},{"ruleId":"238","severity":1,"message":"262","line":112,"column":13,"nodeType":"240","messageId":"241","endLine":112,"endColumn":20},{"ruleId":"238","severity":1,"message":"263","line":112,"column":22,"nodeType":"240","messageId":"241","endLine":112,"endColumn":27},{"ruleId":"238","severity":1,"message":"264","line":113,"column":12,"nodeType":"240","messageId":"241","endLine":113,"endColumn":25},{"ruleId":"238","severity":1,"message":"264","line":20,"column":10,"nodeType":"240","messageId":"241","endLine":20,"endColumn":23},{"ruleId":"255","severity":1,"message":"265","line":26,"column":20,"nodeType":"257","messageId":"258","endLine":26,"endColumn":22},{"ruleId":"251","severity":1,"message":"266","line":52,"column":6,"nodeType":"253","endLine":52,"endColumn":8,"suggestions":"267"},{"ruleId":"251","severity":1,"message":"268","line":56,"column":17,"nodeType":"269","endLine":56,"endColumn":62},{"ruleId":"251","severity":1,"message":"270","line":57,"column":23,"nodeType":"269","endLine":57,"endColumn":74},{"ruleId":"255","severity":1,"message":"265","line":58,"column":22,"nodeType":"257","messageId":"258","endLine":58,"endColumn":24},{"ruleId":"255","severity":1,"message":"265","line":65,"column":26,"nodeType":"257","messageId":"258","endLine":65,"endColumn":28},{"ruleId":"238","severity":1,"message":"264","line":11,"column":12,"nodeType":"240","messageId":"241","endLine":11,"endColumn":25},{"ruleId":"255","severity":1,"message":"265","line":22,"column":22,"nodeType":"257","messageId":"258","endLine":22,"endColumn":24},{"ruleId":"251","severity":1,"message":"266","line":49,"column":8,"nodeType":"253","endLine":49,"endColumn":10,"suggestions":"271"},{"ruleId":"251","severity":1,"message":"268","line":53,"column":21,"nodeType":"269","endLine":53,"endColumn":66},{"ruleId":"251","severity":1,"message":"270","line":54,"column":27,"nodeType":"269","endLine":54,"endColumn":78},{"ruleId":"255","severity":1,"message":"265","line":55,"column":26,"nodeType":"257","messageId":"258","endLine":55,"endColumn":28},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"264","line":16,"column":12,"nodeType":"240","messageId":"241","endLine":16,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":45,"column":8,"nodeType":"253","endLine":45,"endColumn":10,"suggestions":"272"},{"ruleId":"251","severity":1,"message":"266","line":61,"column":10,"nodeType":"253","endLine":61,"endColumn":12,"suggestions":"273"},{"ruleId":"255","severity":1,"message":"265","line":131,"column":30,"nodeType":"257","messageId":"258","endLine":131,"endColumn":32},{"ruleId":"255","severity":1,"message":"256","line":242,"column":83,"nodeType":"257","messageId":"258","endLine":242,"endColumn":85},{"ruleId":"255","severity":1,"message":"256","line":248,"column":83,"nodeType":"257","messageId":"258","endLine":248,"endColumn":85},{"ruleId":"255","severity":1,"message":"256","line":301,"column":49,"nodeType":"257","messageId":"258","endLine":301,"endColumn":51},{"ruleId":"255","severity":1,"message":"256","line":317,"column":57,"nodeType":"257","messageId":"258","endLine":317,"endColumn":59},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"264","line":18,"column":12,"nodeType":"240","messageId":"241","endLine":18,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":42,"column":8,"nodeType":"253","endLine":42,"endColumn":10,"suggestions":"274"},{"ruleId":"255","severity":1,"message":"256","line":151,"column":54,"nodeType":"257","messageId":"258","endLine":151,"endColumn":56},{"ruleId":"255","severity":1,"message":"265","line":151,"column":94,"nodeType":"257","messageId":"258","endLine":151,"endColumn":96},{"ruleId":"255","severity":1,"message":"256","line":185,"column":76,"nodeType":"257","messageId":"258","endLine":185,"endColumn":78},{"ruleId":"255","severity":1,"message":"265","line":191,"column":76,"nodeType":"257","messageId":"258","endLine":191,"endColumn":78},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"264","line":12,"column":12,"nodeType":"240","messageId":"241","endLine":12,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":36,"column":8,"nodeType":"253","endLine":36,"endColumn":10,"suggestions":"275"},{"ruleId":"255","severity":1,"message":"256","line":130,"column":54,"nodeType":"257","messageId":"258","endLine":130,"endColumn":56},{"ruleId":"255","severity":1,"message":"265","line":130,"column":94,"nodeType":"257","messageId":"258","endLine":130,"endColumn":96},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"244","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"264","line":10,"column":12,"nodeType":"240","messageId":"241","endLine":10,"endColumn":25},{"ruleId":"238","severity":1,"message":"262","line":12,"column":20,"nodeType":"240","messageId":"241","endLine":12,"endColumn":27},{"ruleId":"238","severity":1,"message":"263","line":12,"column":29,"nodeType":"240","messageId":"241","endLine":12,"endColumn":34},{"ruleId":"255","severity":1,"message":"265","line":18,"column":22,"nodeType":"257","messageId":"258","endLine":18,"endColumn":24},{"ruleId":"251","severity":1,"message":"276","line":46,"column":8,"nodeType":"253","endLine":46,"endColumn":10,"suggestions":"277"},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"264","line":16,"column":12,"nodeType":"240","messageId":"241","endLine":16,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":44,"column":8,"nodeType":"253","endLine":44,"endColumn":10,"suggestions":"278"},{"ruleId":"255","severity":1,"message":"256","line":202,"column":73,"nodeType":"257","messageId":"258","endLine":202,"endColumn":75},{"ruleId":"255","severity":1,"message":"256","line":208,"column":73,"nodeType":"257","messageId":"258","endLine":208,"endColumn":75},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"246","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"264","line":9,"column":12,"nodeType":"240","messageId":"241","endLine":9,"endColumn":25},{"ruleId":"238","severity":1,"message":"279","line":12,"column":13,"nodeType":"240","messageId":"241","endLine":12,"endColumn":18},{"ruleId":"238","severity":1,"message":"262","line":12,"column":20,"nodeType":"240","messageId":"241","endLine":12,"endColumn":27},{"ruleId":"238","severity":1,"message":"263","line":12,"column":29,"nodeType":"240","messageId":"241","endLine":12,"endColumn":34},{"ruleId":"238","severity":1,"message":"280","line":14,"column":11,"nodeType":"240","messageId":"241","endLine":14,"endColumn":19},{"ruleId":"255","severity":1,"message":"256","line":25,"column":18,"nodeType":"257","messageId":"258","endLine":25,"endColumn":20},{"ruleId":"255","severity":1,"message":"265","line":37,"column":22,"nodeType":"257","messageId":"258","endLine":37,"endColumn":24},{"ruleId":"238","severity":1,"message":"264","line":43,"column":12,"nodeType":"240","messageId":"241","endLine":43,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":65,"column":8,"nodeType":"253","endLine":65,"endColumn":10,"suggestions":"281"},{"ruleId":"255","severity":1,"message":"265","line":68,"column":26,"nodeType":"257","messageId":"258","endLine":68,"endColumn":28},{"ruleId":"251","severity":1,"message":"282","line":74,"column":8,"nodeType":"253","endLine":74,"endColumn":15,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":95,"column":17,"nodeType":"286","messageId":"287","endLine":101,"endColumn":18},{"ruleId":"284","severity":1,"message":"288","line":102,"column":17,"nodeType":"286","messageId":"287","endLine":108,"endColumn":18},{"ruleId":"251","severity":1,"message":"289","line":189,"column":8,"nodeType":"253","endLine":189,"endColumn":14,"suggestions":"290"},{"ruleId":"255","severity":1,"message":"265","line":192,"column":38,"nodeType":"257","messageId":"258","endLine":192,"endColumn":40},{"ruleId":"251","severity":1,"message":"289","line":198,"column":8,"nodeType":"253","endLine":198,"endColumn":14,"suggestions":"291"},{"ruleId":"238","severity":1,"message":"249","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"244","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"279","line":11,"column":13,"nodeType":"240","messageId":"241","endLine":11,"endColumn":18},{"ruleId":"238","severity":1,"message":"262","line":11,"column":20,"nodeType":"240","messageId":"241","endLine":11,"endColumn":27},{"ruleId":"238","severity":1,"message":"263","line":11,"column":29,"nodeType":"240","messageId":"241","endLine":11,"endColumn":34},{"ruleId":"238","severity":1,"message":"264","line":13,"column":12,"nodeType":"240","messageId":"241","endLine":13,"endColumn":25},{"ruleId":"251","severity":1,"message":"292","line":38,"column":8,"nodeType":"253","endLine":38,"endColumn":10,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":121,"column":41,"nodeType":"296","endLine":121,"endColumn":83},{"ruleId":"255","severity":1,"message":"256","line":128,"column":53,"nodeType":"257","messageId":"258","endLine":128,"endColumn":55},{"ruleId":"255","severity":1,"message":"256","line":134,"column":53,"nodeType":"257","messageId":"258","endLine":134,"endColumn":55},{"ruleId":"238","severity":1,"message":"244","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"245","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"297","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":13},{"ruleId":"238","severity":1,"message":"263","line":14,"column":25,"nodeType":"240","messageId":"241","endLine":14,"endColumn":30},{"ruleId":"238","severity":1,"message":"298","line":15,"column":13,"nodeType":"240","messageId":"241","endLine":15,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":47,"column":30,"nodeType":"257","messageId":"258","endLine":47,"endColumn":32},{"ruleId":"255","severity":1,"message":"256","line":49,"column":36,"nodeType":"257","messageId":"258","endLine":49,"endColumn":38},{"ruleId":"238","severity":1,"message":"264","line":83,"column":12,"nodeType":"240","messageId":"241","endLine":83,"endColumn":25},{"ruleId":"284","severity":1,"message":"299","line":52,"column":13,"nodeType":"286","messageId":"287","endLine":58,"endColumn":14},{"ruleId":"251","severity":1,"message":"300","line":91,"column":9,"nodeType":"301","endLine":91,"endColumn":18},{"ruleId":"251","severity":1,"message":"302","line":91,"column":9,"nodeType":"301","endLine":91,"endColumn":18},{"ruleId":"255","severity":1,"message":"265","line":99,"column":22,"nodeType":"257","messageId":"258","endLine":99,"endColumn":24},{"ruleId":"238","severity":1,"message":"303","line":122,"column":21,"nodeType":"240","messageId":"241","endLine":122,"endColumn":25},{"ruleId":"238","severity":1,"message":"303","line":148,"column":29,"nodeType":"240","messageId":"241","endLine":148,"endColumn":33},{"ruleId":"238","severity":1,"message":"264","line":173,"column":12,"nodeType":"240","messageId":"241","endLine":173,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":199,"column":8,"nodeType":"253","endLine":199,"endColumn":10,"suggestions":"304"},{"ruleId":"255","severity":1,"message":"265","line":202,"column":26,"nodeType":"257","messageId":"258","endLine":202,"endColumn":28},{"ruleId":"251","severity":1,"message":"305","line":203,"column":20,"nodeType":"269","endLine":205,"endColumn":14},{"ruleId":"255","severity":1,"message":"265","line":239,"column":38,"nodeType":"257","messageId":"258","endLine":239,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":26,"column":18,"nodeType":"257","messageId":"258","endLine":26,"endColumn":20},{"ruleId":"255","severity":1,"message":"265","line":42,"column":22,"nodeType":"257","messageId":"258","endLine":42,"endColumn":24},{"ruleId":"238","severity":1,"message":"264","line":48,"column":12,"nodeType":"240","messageId":"241","endLine":48,"endColumn":25},{"ruleId":"251","severity":1,"message":"266","line":71,"column":8,"nodeType":"253","endLine":71,"endColumn":10,"suggestions":"306"},{"ruleId":"255","severity":1,"message":"265","line":74,"column":26,"nodeType":"257","messageId":"258","endLine":74,"endColumn":28},{"ruleId":"251","severity":1,"message":"282","line":79,"column":8,"nodeType":"253","endLine":79,"endColumn":15,"suggestions":"307"},{"ruleId":"255","severity":1,"message":"256","line":106,"column":25,"nodeType":"257","messageId":"258","endLine":106,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":143,"column":17,"nodeType":"286","messageId":"287","endLine":149,"endColumn":18},{"ruleId":"284","severity":1,"message":"288","line":150,"column":17,"nodeType":"286","messageId":"287","endLine":156,"endColumn":18},{"ruleId":"251","severity":1,"message":"289","line":252,"column":8,"nodeType":"253","endLine":252,"endColumn":14,"suggestions":"308"},{"ruleId":"255","severity":1,"message":"265","line":255,"column":38,"nodeType":"257","messageId":"258","endLine":255,"endColumn":40},{"ruleId":"251","severity":1,"message":"289","line":266,"column":8,"nodeType":"253","endLine":266,"endColumn":14,"suggestions":"309"},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Cookie' is defined but never used.","'actionType' is defined but never used.","'axios' is defined but never used.","'useReducer' is defined but never used.","'useState' is defined but never used.","'setHeaderContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'personLogin'. Either include it or remove the dependency array.","ArrayExpression",["312"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'headerContext' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["313"],"Assignments to the 'items_key' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'items_equipment' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["314"],["315"],["316"],["317"],["318"],"React Hook useEffect has missing dependencies: 'dispatch' and 'item.name'. Either include them or remove the dependency array.",["319"],["320"],"'items' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["321"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["322"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'cantChooseCantBorrowDate', 'cantChooseCantBorrowDate'.","FunctionDeclaration","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'cantChooseAlreadyBorrowDate', 'cantChooseAlreadyBorrowDate'.","React Hook useEffect has an unnecessary dependency: 'item'. Either exclude it or remove the dependency array. Outer scope values like 'item' aren't valid dependencies because mutating them doesn't re-render the component.",["323"],["324"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.number'. Either include them or remove the dependency array.",["325"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'users' is defined but never used.","'userInfo' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'cantChooseDate', 'cantChooseDate'.","The 'item' object makes the dependencies of useEffect Hook (at line 236) change on every render. To fix this, wrap the initialization of 'item' in its own useMemo() Hook.","VariableDeclarator","The 'item' object makes the dependencies of useEffect Hook (at line 245) change on every render. To fix this, wrap the initialization of 'item' in its own useMemo() Hook.","'data' is assigned a value but never used.",["326"],"Assignments to the 'item' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["327"],["328"],["329"],["330"],"no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"333","fix":"335"},{"desc":"333","fix":"336"},{"desc":"333","fix":"337"},{"desc":"333","fix":"338"},{"desc":"333","fix":"339"},{"desc":"340","fix":"341"},{"desc":"333","fix":"342"},{"desc":"333","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"346","fix":"348"},{"desc":"349","fix":"350"},{"desc":"333","fix":"351"},{"desc":"333","fix":"352"},{"desc":"344","fix":"353"},{"desc":"346","fix":"354"},{"desc":"346","fix":"355"},"Update the dependencies array to be: [personLogin, userInfo.identity]",{"range":"356","text":"357"},"Update the dependencies array to be: [dispatch]",{"range":"358","text":"359"},{"range":"360","text":"359"},{"range":"361","text":"359"},{"range":"362","text":"359"},{"range":"363","text":"359"},{"range":"364","text":"359"},"Update the dependencies array to be: [dispatch, item.name]",{"range":"365","text":"366"},{"range":"367","text":"359"},{"range":"368","text":"359"},"Update the dependencies array to be: [items, props.match.params.id]",{"range":"369","text":"370"},"Update the dependencies array to be: []",{"range":"371","text":"372"},{"range":"373","text":"372"},"Update the dependencies array to be: [dispatch, userInfo.number]",{"range":"374","text":"375"},{"range":"376","text":"359"},{"range":"377","text":"359"},{"range":"378","text":"370"},{"range":"379","text":"372"},{"range":"380","text":"372"},[1403,1422],"[personLogin, userInfo.identity]",[1592,1594],"[dispatch]",[1706,1708],[1708,1710],[2205,2207],[1537,1539],[1283,1285],[1511,1513],"[dispatch, item.name]",[1603,1605],[2145,2147],[2334,2341],"[items, props.match.params.id]",[6492,6498],"[]",[6682,6688],[1442,1444],"[dispatch, userInfo.number]",[6599,6601],[2283,2285],[2471,2478],[9476,9482],[9841,9847]]